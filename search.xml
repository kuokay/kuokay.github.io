<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL安装</title>
      <link href="/2020/06/22/MySQL%E5%AE%89%E8%A3%85/"/>
      <url>/2020/06/22/MySQL%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、MYSQL的安装"><a href="#一、MYSQL的安装" class="headerlink" title="一、MYSQL的安装"></a>一、MYSQL的安装</h1><p>首先登入官网下载mysql的安装包，官网地址：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a></p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019152505680-503282651.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019152505680-503282651.png" class="lazyload" title></a></p><p>一般下载这个就好，现在的最新版本是5.8，但是据说已经收费了，5.7以前的版本不收费，可以下载5.7以前的版本，这里面以我现在使用的mysql-5.5.49为例。</p><p>但是这里面存在一个问题：我说的下面的步骤是对于安装板的安装方式，上面这个是解压版的压缩包，可能会存在一些问题。(十分感谢5楼给我的留言，找到了错误)</p><p>安装版本的网址： <a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a></p><p>下载这两个即可：</p><p><a href="https://img2018.cnblogs.com/i-beta/1419534/202001/1419534-20200108182007663-456122441.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/i-beta/1419534/202001/1419534-20200108182007663-456122441.png" class="lazyload" title></a></p><p>１、打开下载的mysql安装文件mysql-5.5.27-win32.zip，双击解压缩，运行“setup.exe”。</p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019152728102-738978444.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019152728102-738978444.png" class="lazyload" title></a></p><p>２、选择安装类型，有“Typical（默认）”、“Complete（完全）”、“Custom（用户自定义）”三个选项，选择“Custom”，按“next”键继续。</p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019152813724-237006237.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019152813724-237006237.png" class="lazyload" title></a></p><p>３、点选“Browse”，手动指定安装目录。</p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019152838728-825507385.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019152838728-825507385.png" class="lazyload" title></a></p><p>４、填上安装目录，我的是“F:\Server\MySQL\MySQL Server 5.0”，也建议不要放在与操作系统同一分区，这样可以防止系统备份还原的时候，数据被清空。按“OK”继续。</p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019152854550-693179136.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019152854550-693179136.png" class="lazyload" title></a></p><p> 在确认完这个路径之后，继续点击Server data files，也需要修改这个路径，这个文件保存的是在mysql里面编写的数据库代码</p><p>确认一下先前的设置，如果有误，按“Back”返回重做。按“Install”开始安装。</p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153042566-680033406.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153042566-680033406.png" class="lazyload" title></a></p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153053526-561170312.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153053526-561170312.png" class="lazyload" title></a></p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153059866-743042211.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153059866-743042211.png" class="lazyload" title></a></p><p>５、正在安装中，请稍候，直到出现下面的界面, 则完成MYSQL的安装</p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153114862-341001343.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153114862-341001343.png" class="lazyload" title></a></p><h1 id="二、MYSQL的配置"><a href="#二、MYSQL的配置" class="headerlink" title="二、MYSQL的配置"></a>二、MYSQL的配置</h1><p>１、安装完成了，出现如下界面将进入mysql配置向导。</p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153203704-927523552.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153203704-927523552.png" class="lazyload" title></a></p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153208621-592736990.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153208621-592736990.png" class="lazyload" title></a></p><p>２、选择配置方式，“Detailed Configuration（手动精确配置）”、“Standard Configuration（标准配置）”，我们选择“Detailed Configuration”，方便熟悉配置过程。</p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153222800-1171436475.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153222800-1171436475.png" class="lazyload" title></a></p><p>３、选择服务器类型，“Developer Machine（开发测试类，mysql占用很少资源）”、“Server Machine（服务器类型，mysql占用较多资源）”、“Dedicated MySQL Server Machine（专门的数据库服务器，mysql占用所有可用资源）” </p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153237847-1876080548.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153237847-1876080548.png" class="lazyload" title></a></p><p>４、选择mysql数据库的大致用途，“Multifunctional Database（通用多功能型，好）”、“Transactional Database Only（服务器类型，专注于事务处理，一般）”、“Non-Transactional Database Only（非事务处理型，较简单，主要做一些监控、记数用，对MyISAM数据类型的支持仅限于non-transactional），按“Next”继续。</p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153250457-2142538102.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153250457-2142538102.png" class="lazyload" title></a></p><p>５、选择网站并发连接数，同时连接的数目，“Decision Support(DSS)/OLAP（20个左右）”、“Online Transaction Processing(OLTP)（500个左右）”、“Manual Setting（手动设置，自己输一个数）”。 </p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153302865-1049904564.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153302865-1049904564.png" class="lazyload" title></a></p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153306464-597119127.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153306464-597119127.png" class="lazyload" title></a></p><p>６、是否启用TCP/IP连接，设定端口，如果不启用，就只能在自己的机器上访问mysql数据库了，在这个页面上，您还可以选择“启用标准模式”（Enable Strict Mode），这样MySQL就不会允许细小的语法错误。如果是新手，建议您取消标准模式以减少麻烦。但熟悉MySQL以后，尽量使用标准模式，因为它可以降低有害数据进入数据库的可能性。按“Next”继续 。</p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153320998-1557625021.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153320998-1557625021.png" class="lazyload" title></a></p><p>７、就是对mysql默认数据库语言编码进行设置（重要），一般选UTF-8，按 “Next”继续。</p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153332940-421891328.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153332940-421891328.png" class="lazyload" title></a></p><p>８、选择是否将mysql安装为windows服务，还可以指定Service Name（服务标识名称），是否将mysql的bin目录加入到Windows PATH（加入后，就可以直接使用bin下的文件，而不用指出目录名，比如连接，“mysql.exe -uusername -ppassword;”就可以了，不用指出mysql.exe的完整地址，很方便），我这里全部打上了勾，Service Name不变。按“Next”继续。</p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153343734-1925401088.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153343734-1925401088.png" class="lazyload" title></a></p><p>９、询问是否要修改默认root用户（超级管理）的密码。“Enable root access from remote machines（是否允许root用户在其它的机器上登陆，如果要安全，就不要勾上，如果要方便，就勾上它）”。最后“Create An Anonymous Account（新建一个匿名用户，匿名用户可以连接数据库，不能操作数据，包括查询）”，一般就不用勾了，设置完毕，按“Next”继续。</p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153354929-1264932943.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153354929-1264932943.png" class="lazyload" title></a></p><p>10、确认设置无误，按“Execute”使设置生效，即完成MYSQL的安装和配置.</p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153411103-410226874.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153411103-410226874.png" class="lazyload" title></a></p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153415129-261117728.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153415129-261117728.png" class="lazyload" title></a></p><p>注意：设置完毕，按“Finish”后有一个比较常见的错误，就是不能“Start service”，一般出现在以前有安装mysql的服务器上，解决的办法，先保证以前安装的mysql服务器彻底卸载掉了；不行的话，检查是否按上面一步所说，之前的密码是否有修改，照上面的操作；如果依然不行，将mysql安装目录下的data文件夹备份，然后删除，在安装完成后，将安装生成的 data文件夹删除，备份的data文件夹移回来，再重启mysql服务就可以了，这种情况下，可能需要将数据库检查一下，然后修复一次，防止数据出错。</p><p><a href="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153431013-806476698.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://img2018.cnblogs.com/blog/1419534/201910/1419534-20191019153431013-806476698.png" class="lazyload" title></a></p><p>解决方法：</p><p>1, 卸载MySQL</p><p>2, Windows Xp系统删除目录 C:\Documents and Settings\All Users\Application Data\</p><p>windows 7\8\10操作系统删除目录C:\ProgramData\MySQL</p><p>3、重新安装就可以了</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>celery</title>
      <link href="/2020/05/26/CELERY/"/>
      <url>/2020/05/26/CELERY/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>celery 简介</strong></p><p>Celery 是一个专注于实时处理和任务调度的分布式任务队列, 同时提供操作和维护分布式系统所需的工具.. 所谓任务就是消息, 消息中的有效载荷中包含要执行任务需要的全部数据.</p><p>Celery 是一个分布式队列的管理工具, 可以用 Celery 提供的接口快速实现并管理一个分布式的任务队列.</p><p>Celery 本身不是任务队列, 是管理分布式任务队列的工具. 它封装了操作常见任务队列的各种操作, 我们使用它可以快速进行任务队列的使用与管理.</p><p><a href="https://i.loli.net/2020/05/26/J6fWiczPsVtAOlZ.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://i.loli.net/2020/05/26/J6fWiczPsVtAOlZ.jpg" class="lazyload" title></a> </p><p><strong>Celery 特性 :</strong></p><p>方便查看定时任务的执行情况, 如 是否成功, 当前状态, 执行任务花费的时间等.</p><p>使用功能齐备的管理后台或命令行添加,更新,删除任务.<br>方便把任务和配置管理相关联.</p><p>可选 多进程, Eventlet 和 Gevent 三种模型并发执行.<br>提供错误处理机制.</p><p>提供多种任务原语, 方便实现任务分组,拆分,和调用链.<br>支持多种消息代理和存储后端.</p><p>Celery 是语言无关的.它提供了python 等常见语言的接口支持.</p><p><strong>使用场景</strong></p><p>异步任务：将耗时操作任务提交给Celery去异步执行，比如发送短信/邮件、消息推送、音视频处理等等</p><p>定时任务：定时执行某件事情，比如每天数据统计</p><p><strong>Django中使用Celery</strong></p><p>1、 在项目目录下创建celeryconfig.py</p><pre><code>import djcelery djcelery.setup_loader() CELERY_IMPORTS=(     &apos;app01.tasks&apos;, ) #有些情况可以防止死锁 CELERYD_FORCE_EXECV=True # 设置并发worker数量 CELERYD_CONCURRENCY=4 #允许重试 CELERY_ACKS_LATE=True # 每个worker最多执行100个任务被销毁，可以防止内存泄漏 CELERYD_MAX_TASKS_PER_CHILD=100 # 超时时间   CELERYD_TASK_TIME_LIMIT=12*30</code></pre><p>2、 在app01目录下创建tasks.py</p><pre><code>from celery import task@taskdef add(a,b):    with open(&apos;a.text&apos;, &apos;a&apos;, encoding=&apos;utf-8&apos;) as f:        f.write(&apos;a&apos;)    print(a+b)</code></pre><p>3、 视图函数views.py</p><pre><code>from django.shortcuts import render,HttpResponsefrom app01.tasks import addfrom datetime import datetimedef test(request):    # result=add.delay(2,3)    ctime = datetime.now()    # 默认用utc时间    utc_ctime = datetime.utcfromtimestamp(ctime.timestamp())    from datetime import timedelta    time_delay = timedelta(seconds=5)    task_time = utc_ctime + time_delay    result = add.apply_async(args=[4, 3], eta=task_time)    print(result.id)    return HttpResponse(&apos;ok&apos;)</code></pre><p>4、 settings.py</p><pre><code>#INSTALLED_APPS = [#    &apos;djcelery&apos;,#    &apos;app01&apos;#]from djagocele import celeryconfigBROKER_BACKEND=&apos;redis&apos;BOOKER_URL=&apos;redis://127.0.0.1:6379/1&apos;CELERY_RESULT_BACKEND=&apos;redis://127.0.0.1:6379/2&apos;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> celery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>消息中间件简介</title>
      <link href="/2020/05/26/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6%E7%AE%80%E4%BB%8B/"/>
      <url>/2020/05/26/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> 消息中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SPU和SKU</title>
      <link href="/2020/05/22/SPU%20%20SKU/"/>
      <url>/2020/05/22/SPU%20%20SKU/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>SPU和SKU介绍及区别</strong></p><p><strong>一、spu概念</strong></p><blockquote><p>SPU = Standard Product Unit (标准化产品单元)</p></blockquote><p>SPU是商品信息聚合的最小单位，是一组可复用、易检索的标准化信息的集合，该集合描述了一个产品的特性。通俗点讲，属性值、特性相同的商品就可以称为一个SPU。</p><p><strong>二、sku概念</strong></p><blockquote><p>SKU=stock keeping unit(库存量单位)</p></blockquote><p>SKU即库存进出计量的单位， 可以是以件、盒、托盘等为单位。<br>SKU是物理上不可分割的最小存货单元。在使用时要根据不同业态，不同管理模式来处理。在服装、鞋类商品中使用最多最普遍。</p><p><strong>三、区别</strong></p><p>1、 在商品信息电子化过程中，商品的特性可以由多个“属性|属性值对”进行描述。“属性|属性值对”完全相同的商品，可以抽象成为一个SPU。</p><p>另一方面，这些“属性|属性值对”在SPU中固化下来，逐步标准化。</p><p>基于SPU的商品信息结构，可以实现丰富的应用，比如商品信息与资讯、评论、以及其它SPU的整合。</p><p>例如：iPhone X 可以确定一个产品即为一个SPU。</p><hr><p>1、 SKU是指一款商品，每款都有出现一个SKU，便于电商品牌识别商品。</p><p>2、 一款商品多色，则是有多个SKU，例：一件衣服，有红色、白色、蓝色，则SKU编码也不相同，如相同则会出现混淆，发错货。</p><p>例如：iPhone X 64G 银色 则是一个SKU。</p><p>spu是宝贝的编码，sku是宝贝的款式</p><p><a href="https://i.loli.net/2020/05/22/gtfqjrAnJaBdb4k.png" data-fancybox="group" data-caption="3.png" class="fancybox"><img alt="3.png" data-src="https://i.loli.net/2020/05/22/gtfqjrAnJaBdb4k.png" class="lazyload" title="3.png"></a></p><p><a href="https://i.loli.net/2020/05/22/z2uBKg1k9OVMHbm.jpg" data-fancybox="group" data-caption="4.jpg" class="fancybox"><img alt="4.jpg" data-src="https://i.loli.net/2020/05/22/z2uBKg1k9OVMHbm.jpg" class="lazyload" title="4.jpg"></a></p>]]></content>
      
      
      <categories>
          
          <category> 电商 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SPU和SKU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象设计原则</title>
      <link href="/2020/05/20/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/"/>
      <url>/2020/05/20/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>一、 开闭原则(Open Close Principle)</strong></p><p>开闭原则的意思是：对扩展开放，对修改关闭。在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果。简言之，是为了使程序的扩展性好，易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类，后面的具体设计中我们会提到这点。</p><ul><li>对扩展开放,对更改封闭。</li><li>类模块应该是可扩展的,但是不可修改。</li></ul><p><strong>二、 里氏代换原则(Liskov Substitution Principle)</strong></p><p>里氏代换原则是面向对象设计的基本原则之一。 里氏代换原则中说，任何基类可以出现的地方，子类一定可以出现。LSP 是继承复用的基石，只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。实现开闭原则的关键步骤就是抽象化，而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。</p><ul><li>子类必须能够替换它们的基类(IS-A)</li><li>继承表达类型能抽象。</li></ul><p><strong>三、 依赖倒转原则(Dependence Inversion Principle)</strong></p><p>这个原则是开闭原则的基础，具体内容：针对接口编程，依赖于抽象而不依赖于具体。</p><ul><li>高层模块(稳定)不应该依赖于低层模块(变化),二者都应该依赖于抽象(稳定)。</li><li>抽象(稳定)不应该依赖于实现细节(变化),实现细节应该依赖于抽象(稳定)。</li></ul><p><strong>四、 接口隔离原则(Interface Segregation Principle)</strong></p><p>这个原则的意思是：使用多个隔离的接口，比使用单个接口要好。它还有另外一个意思是：降低类之间的耦合度。由此可见，其实设计模式就是从大型软件架构出发、便于升级和维护的软件设计思想，它强调降低依赖，降低耦合。</p><ul><li>不应该强迫客户程序依赖它们不用的方法。</li><li>接口应该小而完备。</li></ul><p><strong>五、 优先使用对象组合,而不是类继承</strong></p><ul><li>继承类通常为”白箱复用”,对象类组合通常为”黑箱复用”。</li><li>继承在某种程度上破坏了封装性，子类父类耦合度高。</li><li>而对象组合则只要求被组合的对象具有良好定义的接口，耦合度低。</li></ul><p><strong>六、 单一职责原则(Single responsibility principle)</strong></p><p>单一职责原则是指：一个类应该只有一个发生变化的原因，即一个类只负责一项职责。<br>如果一个类有多个职责，这些职责就耦合在了一起。当一个职责发生变化时，可能会影响其它的职责。另外，多个职责耦合在一起会影响复用性。<br>此原则的核心是解耦和增强内聚性。</p><ul><li>一个类应该只有一个引起它变化的原因。</li><li>变化的方向隐含着类的职责。</li></ul><p><strong>七、 封装变化点</strong></p><ul><li>使用封装来创建对象之间的分界层，让设计者可以在分界层的<br>一侧进行修改，而不会对另一侧产生不良的影响，从而实现层<br>次间的松耦合</li></ul><p><strong>八、 针对接口编程，而不是针对实现编程</strong></p><ul><li>不将变量类型声明为某个特定的具体类，而是声明为某个接口。</li><li>客户程序无需获知对象的具体类型，只需要知道对象所具有的<br>接口。</li><li>减少系统中各部分的依赖关系，从而实现“高内聚、松耦合”<br>的类型设计方案。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面向对象设计原则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三次握手和四次挥手</title>
      <link href="/2020/05/15/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%EF%BC%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/"/>
      <url>/2020/05/15/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%EF%BC%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>TCP报文段首部格式</strong></p><p><a href="https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=1456106723,727720266&fm=26&gp=0.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=1456106723,727720266&fm=26&gp=0.jpg" class="lazyload" title></a></p><p> 序列号seq：占4个字节，用来标记数据段的顺序，TCP把连接中发送的所有数据字节都编上一个序号，第一个字节的编号由本地随机产生；给字节编上序号后，就给每一个报文段指派一个序号；序列号seq就是这个报文段中的第一个字节的数据编号。</p><pre><code>确认号ack：占4个字节，期待收到对方下一个报文段的第一个数据字节的序号；序列号表示报文段携带数据的第一个字节的编号；而确认号指的是期望接收到下一个字节的编号；因此当前报文段最后一个字节的编号+1即为确认号。确认ACK：占1位，仅当ACK=1时，确认号字段才有效。ACK=0时，确认号无效同步SYN：连接建立时用于同步序号。当SYN=1，ACK=0时表示：这是一个连接请求报文段。若同意连接，则在响应报文段中使得SYN=1，ACK=1。因此，SYN=1表示这是一个连接请求，或连接接受报文。SYN这个标志位只有在TCP建产连接时才会被置1，握手完成后SYN标志位被置0。终止FIN：用来释放一个连接。FIN=1表示：此报文段的发送方的数据已经发送完毕，并要求释放运输连接PS：ACK、SYN和FIN这些大写的单词表示标志位，其值要么是1，要么是0；ack、seq小写的单词表示序号。</code></pre><table><thead><tr><th>字段</th><th align="center">含义</th></tr></thead><tbody><tr><td>URG</td><td align="center">紧急指针是否有效。为1，表示某一位需要被优先处理</td></tr><tr><td>ACK</td><td align="center">确认号是否有效，一般置为1。</td></tr><tr><td>PSH</td><td align="center">提示接收端应用程序立即从TCP缓冲区把数据读走。</td></tr><tr><td>RST</td><td align="center">对方要求重新建立连接，复位。</td></tr><tr><td>SYN</td><td align="center">请求建立连接，并在其序列号的字段进行序列号的初始值设定。建立连接，设置为1</td></tr><tr><td>FIN</td><td align="center">希望断开连接。</td></tr></tbody></table><p><strong>三次握手过程</strong></p><p><a href="https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=442724225,526434029&fm=26&gp=0.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=442724225,526434029&fm=26&gp=0.jpg" class="lazyload" title></a></p><p>ROUND1:    客户端发送连接请求报文段,无应用层数据。</p><pre><code>SYN=1,seq=x(随机)</code></pre><p>ROUND2:    服务器端为该tcp连接分配缓存和变量,并向客户端返回确认报文段,允许连接,无应用层数据。</p><pre><code>SYN=1, ACK=1, seq=y(随机), ack=x+1</code></pre><p>ROUND3:    客户端为该tcp连接分配缓存和变量,并向服务器端返回确认,可携带数据。</p><pre><code>SYN=0, ACK=1, seq=x+1, ack=y+1</code></pre><p><strong>四次挥手过程过程</strong></p><p><a href="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1589636258396&di=7b0fd9842af20c5b85ca4276ebba6c18&imgtype=0&src=http%3A%2F%2Fwww.pc-fly.com%2Fuploads%2Fallimg%2F20170516%2F1494943585801_2.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1589636258396&di=7b0fd9842af20c5b85ca4276ebba6c18&imgtype=0&src=http%3A%2F%2Fwww.pc-fly.com%2Fuploads%2Fallimg%2F20170516%2F1494943585801_2.jpg" class="lazyload" title></a></p><p>ROUND1:    客户端发送连接释放报文段,停止发送数据,主动关闭tcp连接。</p><pre><code>FIN=1,seq=u</code></pre><p>ROUND2:    服务器端回送一个确认报文段,客户到服务器这个方向的连接就释放了————半关闭状态。</p><pre><code>ACK=1, seq=v, ack=u+1</code></pre><p>ROUND3:    服务器端发完数据,就发出连接释放报文段,主动关闭tcp连接</p><pre><code>FIN=1,ACK=1, seq=w, ack=u+1</code></pre><p>ROUND4:    客户端回送一个确认报文段,再等到时间等待计时器设置的2msl(最长报文段寿命)后连续彻底关闭。</p><pre><code>ACK=1, seq=u+1, ack=w+1</code></pre>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统重装</title>
      <link href="/2020/05/09/windows%E7%B3%BB%E7%BB%9F%E9%87%8D%E8%A3%85/"/>
      <url>/2020/05/09/windows%E7%B3%BB%E7%BB%9F%E9%87%8D%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文介绍如何优雅的重新安装笔记本电脑系统</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>1、 确定电脑配置</p><p>确定自己的电脑是什么配置，适合重装什么系统。</p><p>2、 备份重要文件</p><p>重装电脑，文件备份是一定要提前着手的，特别是C盘里的东西，如果 是重要的文件，建议先备份放到U盘或者是百度云。</p><p>3、 装备一个重装软件/U盘PE重装软件。</p><p>不管你是用一键重装系统软件还是用U盘来进行重装，可以用一些比较好的工具，不懂的话可以看看安装教程。</p><p>小白一键重装系统软件：<a href="http://www.xiaobaixitong.com/" target="_blank" rel="noopener">http://www.xiaobaixitong.com/</a></p><p>U盘重装系统软件：<a href="http://www.zhuangjiba.com/" target="_blank" rel="noopener">http://www.zhuangjiba.com/</a></p><p>大白菜: <a href="http://www.winbaicai.com/" target="_blank" rel="noopener">http://www.winbaicai.com/</a></p><p>老毛桃: <a href="https://www.laomaotao.net/" target="_blank" rel="noopener">https://www.laomaotao.net/</a></p><h2 id="系统盘制作"><a href="#系统盘制作" class="headerlink" title="系统盘制作"></a>系统盘制作</h2><p>1、 提前下载好小白一键重装系统，之后将U盘插入此电脑，备份U盘重要数据。</p><p>2、 打开小白系统，进入功能界面点击制作系统选项，检测到U盘后就点击开始制作按钮。</p><p><a href="https://pic.rmb.bdstatic.com/0001bbdc9c06bb4b29f6c9523ce5937c8762.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://pic.rmb.bdstatic.com/0001bbdc9c06bb4b29f6c9523ce5937c8762.gif" class="lazyload" title></a></p><p>3、 出现如图界面，直接点击右下角的开始制作。如果想要制作pe系统盘安装系统，可以选择自己喜欢的系统哦。</p><p><a href="https://pic.rmb.bdstatic.com/a248d662bfcba19b36d0064000560cb84346.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://pic.rmb.bdstatic.com/a248d662bfcba19b36d0064000560cb84346.gif" class="lazyload" title></a></p><p>4、 弹出备份U盘数据提示，备份好了就点击确定。</p><p><a href="https://pic.rmb.bdstatic.com/0fd49230f1234646ee69ef587e8d442b9394.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://pic.rmb.bdstatic.com/0fd49230f1234646ee69ef587e8d442b9394.gif" class="lazyload" title></a></p><p>5、 等待pe系统盘制作完成后，拔出U盘即可。</p><p><a href="https://pic.rmb.bdstatic.com/a5cdc337221c6cb8d1ed90659dd6454b7861.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://pic.rmb.bdstatic.com/a5cdc337221c6cb8d1ed90659dd6454b7861.gif" class="lazyload" title></a></p><h3 id="Bios设置"><a href="#Bios设置" class="headerlink" title="Bios设置"></a>Bios设置</h3><p>由于电脑品牌不同，使用的主板也不相同，所以进入bios的方法也不一样</p><p><a href="https://pic1.zhimg.com/80/v2-2943dbea0ffd545b0871b3163d328770_720w.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://pic1.zhimg.com/80/v2-2943dbea0ffd545b0871b3163d328770_720w.jpg" class="lazyload" title></a></p><p><a href="https://pic1.zhimg.com/80/v2-ccb657ff8bb5f58af8f42876e5fd4428_720w.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://pic1.zhimg.com/80/v2-ccb657ff8bb5f58af8f42876e5fd4428_720w.jpg" class="lazyload" title></a></p><p><a href="https://pic1.zhimg.com/80/v2-765ef3b5a364937aa1001e1f0b4e7348_720w.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://pic1.zhimg.com/80/v2-765ef3b5a364937aa1001e1f0b4e7348_720w.jpg" class="lazyload" title></a></p><p><strong>联想电脑为例:</strong></p><p>插入制作好的U盘启动盘，启动电脑，出现开机画面时按下F12进入bios设置界面。</p><p>具体步骤如下：</p><p>1、 进入bios界面后，将光标移动到“boot”，点可移动设备（removeble device）。</p><p><a href="https://iknow-pic.cdn.bcebos.com/00e93901213fb80e72053c643bd12f2eb83894a8?x-bce-process=image/resize,m_lfit,w_600,h_800,limit_1" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://iknow-pic.cdn.bcebos.com/00e93901213fb80e72053c643bd12f2eb83894a8?x-bce-process=image/resize,m_lfit,w_600,h_800,limit_1" class="lazyload" title></a></p><p>2、 按“+键”将“removeble device”移动至最上面，设置u盘优先启动。</p><p><a href="https://iknow-pic.cdn.bcebos.com/72f082025aafa40f3006926ea664034f79f01944?x-bce-process=image/resize,m_lfit,w_600,h_800,limit_1" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://iknow-pic.cdn.bcebos.com/72f082025aafa40f3006926ea664034f79f01944?x-bce-process=image/resize,m_lfit,w_600,h_800,limit_1" class="lazyload" title></a></p><p>3、设置完成后，按下F10，点“yes”确定，然后重启电脑就是从u盘启动了。</p><p><a href="https://iknow-pic.cdn.bcebos.com/35a85edf8db1cb13618a63a0d054564e93584ba5?x-bce-process=image/resize,m_lfit,w_600,h_800,limit_1" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://iknow-pic.cdn.bcebos.com/35a85edf8db1cb13618a63a0d054564e93584ba5?x-bce-process=image/resize,m_lfit,w_600,h_800,limit_1" class="lazyload" title></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>第一步：将GHOST WIN10系统(ISO或GHO)镜像复制到U盘</p><p>打开启动U盘，进入“GHO”文件夹。将下载好的WIN8 ISO/GHO镜像拷贝到此目录。由于ISO/GHO文件通常都比较大，可能需要等待5~10分钟。</p><p><a href="https://www.upandashi.com/uploads/allimg/150915/5-1509151H546417.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://www.upandashi.com/uploads/allimg/150915/5-1509151H546417.jpg" class="lazyload" title></a></p><p>第二步：重启电脑，通过快捷键启动U盘进入U盘装机大师</p><p>当电脑启动以后反复的按快捷键一般是F12，机型不一样快捷键有可能不一样，具体请看下面启动按键列表，之后窗口里面会有几个选择，我们要找到并按上下方向键”↑↓”选择到u盘，然后按回车键进入U盘装机大师主界面。（一般我们选择的时候可以看下其中一个选项是有关USB或者您u盘的品牌的英文名称，那便是我们的u盘了！）小编整理了各种品牌主板一键进入U盘装机大师的快捷键，我们可以在下面的列表中查找自己相应的主板品牌，然后就可以看到该主板的一键启动u盘装机大师的热键了。</p><p><a href="https://www.upandashi.com/uploads/allimg/141115/12561Q531-0.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://www.upandashi.com/uploads/allimg/141115/12561Q531-0.jpg" class="lazyload" title></a></p><p>第三步：进入PE系统执行“U盘大师一键装机”安装WIN10</p><p>进入U盘装机大师启动菜单后，通过上下键选择“[01]运行U盘大师Win10PE(X64)UEFI版(首选)”，选中后，按“回车键”进入PE系统。</p><p><a href="https://www.upandashi.com/uploads/allimg/190305/1-1Z305202444200.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://www.upandashi.com/uploads/allimg/190305/1-1Z305202444200.png" class="lazyload" title></a></p><p>1、 PE启动后，自动加载U盘装机大师界面，等待几秒后，进入PE系统桌面。</p><p><a href="https://www.upandashi.com/uploads/allimg/190305/1-1Z305205F0242.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://www.upandashi.com/uploads/allimg/190305/1-1Z305205F0242.png" class="lazyload" title></a></p><p>2、 一键装系统<br>　　进入PE桌面后，用鼠标双击“U盘大师一键装机”图标，将打开“U盘大师一键装机”软件。</p><p><a href="https://www.upandashi.com/images/updspic/ghost-1.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://www.upandashi.com/images/updspic/ghost-1.png" class="lazyload" title></a></p><p>3、 进入“U盘大师一键装机”后，通过“打开”按钮选择我们拷贝进U盘启动盘的ISO文件。</p><p><a href="https://www.upandashi.com/images/updspic/ghost-2.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://www.upandashi.com/images/updspic/ghost-2.png" class="lazyload" title></a></p><p>4、 在弹出窗口中，首先通过下拉列表选择U盘启动盘的GHO目录；然后选择刚才拷贝进去的Windows10系统镜像；确认文件名无误后，点击“打开”按钮。</p><p><a href="https://www.upandashi.com/images/updspic/ghost-3.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://www.upandashi.com/images/updspic/ghost-3.png" class="lazyload" title></a></p><p>5、 格式如果为GHO的请略过此步骤，在弹出的窗口界面中，鼠标单击选中WIN10.GHO文件。选中后，点击“确定”按钮。</p><p><a href="https://www.upandashi.com/images/updspic/ghost-4.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://www.upandashi.com/images/updspic/ghost-4.png" class="lazyload" title></a></p><p>6、 选择要恢复的分区，一般默认是C:盘，然后点击”确定”。</p><p><a href="https://www.upandashi.com/images/updspic/ghost-5.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://www.upandashi.com/images/updspic/ghost-5.png" class="lazyload" title></a></p><p>7、 开始恢复系统之前，软件会再次弹窗确认是否要继续操作，在确认无误后，点击“是”按钮。</p><p><a href="https://www.upandashi.com/images/updspic/ghost-6.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://www.upandashi.com/images/updspic/ghost-6.png" class="lazyload" title></a></p><p>8、 此时，会自动弹出Ghost系统还原界面。我们耐心等待Ghost还原自动安装WIN10系统。</p><p><a href="https://www.upandashi.com/images/updspic/ghost-7.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://www.upandashi.com/images/updspic/ghost-7.png" class="lazyload" title></a></p><p><a href="https://www.upandashi.com/uploads/allimg/150915/5-1509151J04A96.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://www.upandashi.com/uploads/allimg/150915/5-1509151J04A96.jpg" class="lazyload" title></a></p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NoSQL简介</title>
      <link href="/2020/04/21/NoSQL/"/>
      <url>/2020/04/21/NoSQL/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="NoSQL简介"><a href="#NoSQL简介" class="headerlink" title="NoSQL简介:"></a>NoSQL简介:</h2><p>NoSQL(NoSQL = Not Only SQL )，意即”不仅仅是SQL”。<br>在现代的计算系统上每天网络上都会产生庞大的数据量。<br>这些数据有很大一部分是由关系数据库管理系统（RDBMS）来处理。 1970年 E.F.Codd’s提出的关系模型的论文 “A relational model of data for large shared data banks”，这使得数据建模和应用程序编程更加简单。<br>通过应用实践证明，关系模型是非常适合于客户服务器编程，远远超出预期的利益，今天它是结构化数据存储在网络和商务应用的主导技术。</p><p>NoSQL 是一项全新的数据库革命性运动，早期就有人提出，发展至2009年趋势越发高涨。NoSQL的拥护者们提倡运用非关系型的数据存储，相对于铺天盖地的关系型数据库运用，这一概念无疑是一种全新的思维的注入。</p><p><a href="https://i.loli.net/2020/04/21/GMqtoznSYsg6xOB.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://i.loli.net/2020/04/21/GMqtoznSYsg6xOB.jpg" class="lazyload" title></a></p><p><strong>分类</strong></p><p>1、 键值(Key-Value)存储数据库</p><p>这一类数据库主要会使用到一个哈希表，这个表中有一个特定的键和一个指针指向特定的数据。Key/value模型对于IT系统来说的优势在于简单、易部署。但是如果DBA只对部分值进行查询或更新的时候，Key/value就显得效率低下了。举例如：Tokyo Cabinet/Tyrant， Redis， Voldemort， Oracle BDB。</p><p>2、 列存储数据库</p><p>这部分数据库通常是用来应对分布式存储的海量数据。键仍然存在，但是它们的特点是指向了多个列。这些列是由列家族来安排的。如：Cassandra， HBase， Riak。</p><p>3、 文档型数据库</p><p>文档型数据库的灵感是来自于Lotus Notes办公软件的，而且它同第一种键值存储相类似。该类型的数据模型是版本化的文档，半结构化的文档以特定的格式存储，比如JSON。文档型数据库可以看作是键值数据库的升级版，允许之间嵌套键值，在处理网页等复杂数据时，文档型数据库比传统键值数据库的查询效率更高。如：CouchDB， MongoDb. 国内也有文档型数据库SequoiaDB，已经开源。</p><p>4、 图形(Graph)数据库</p><p>图形结构的数据库同其他行列以及刚性结构的SQL数据库不同，它是使用灵活的图形模型，并且能够扩展到多个服务器上。NoSQL数据库没有标准的查询语言(SQL)，因此进行数据库查询需要制定数据模型。许多NoSQL数据库都有REST式的数据接口或者查询API。如：Neo4J， InfoGrid， Infinite Graph。</p><p><a href="https://p1.ssl.qhimg.com/t01ef34acd1bb786278.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://p1.ssl.qhimg.com/t01ef34acd1bb786278.png" class="lazyload" title></a></p><p><strong>不同分类特点对比</strong></p><p><a href="https://i.loli.net/2020/04/21/n75jGJq9Ubd6fDI.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://i.loli.net/2020/04/21/n75jGJq9Ubd6fDI.png" class="lazyload" title></a></p><p><strong>NoSQL的一些功能特性：</strong></p><ul><li>使用NoSQL可以存储大量的结构化，半结构化和非结构化数据。</li><li>它支持敏捷的sprint，快速迭代和频繁的代码推送。</li><li>它使用频繁且易于使用的面向对象编程。</li><li>效率更高。 它具有横向扩展体系结构。它使用成本便宜，并具有整体架构。</li></ul><p><strong>适用场景</strong></p><p>1、 数据模型比较简单； </p><p>2、 需要灵活性更强的IT系统；</p><p>3、 对数据库性能要求较高； </p><p>4、 不需要高度的数据一致性； </p><p>5、 对于给定key，比较容易映射复杂值的环境。</p><h2 id="几个主要NoSQL特点介绍："><a href="#几个主要NoSQL特点介绍：" class="headerlink" title="几个主要NoSQL特点介绍："></a>几个主要NoSQL特点介绍：</h2><p><strong>1、 Redis</strong></p><p>  Redis是另外一款因为闪电般的速度而被比较广泛使用的开源NoSQL数据库。它是用C语言开发的。以下是它的几个优点：</p><ul><li><p>数据结构化：Redis提供了一个高效的数据结构扩展，它有时也被称为数据结构服务器。存储在数据库中的键值可以是hash值、列表、字符串、有序或无序集合等。</p></li><li><p>可作为缓存：你可以使用Redis作为一个缓存服务器。</p></li><li><p>非常快：当它以内存的性质工作时，它的执行效率非常的高，此时读写速度几乎没有区别。</p><p><a href="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1587453007401&di=18474280ef10c73a32891630a4c55ef9&imgtype=0&src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20180327%2F34adc98d775145f0b23c5fa67217af1d.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1587453007401&di=18474280ef10c73a32891630a4c55ef9&imgtype=0&src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20180327%2F34adc98d775145f0b23c5fa67217af1d.png" class="lazyload" title></a></p></li></ul><p><strong>2、 Riak</strong></p><p>关键点: 容错性Fault tolerance 失败恢复 　内置全文本搜索<br>　　适合: 如果你希望有类似Cassandra-like (Dynamo-like)风格, 但是你不想处理器复杂性和膨胀性。单服务器有良好可伸缩性scalability, 可用性availability 和容错性 fault-tolerance, 采取是昂贵的多站点复制multi-site replication.<br>　　案例：销售点数据收集，工厂控制系统，那些不能允许几秒当机的场合。</p><p><a href="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1587453073333&di=c3c361dd89ff04584dcb35e2ff851745&imgtype=0&src=http%3A%2F%2Fattach.dataguru.cn%2Fattachments%2Fforum%2F201303%2F23%2F1100320dctrtor0wgdpgjb.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1587453073333&di=c3c361dd89ff04584dcb35e2ff851745&imgtype=0&src=http%3A%2F%2Fattach.dataguru.cn%2Fattachments%2Fforum%2F201303%2F23%2F1100320dctrtor0wgdpgjb.jpg" class="lazyload" title></a>  </p><p><strong>3、 HBase</strong></p><p>关键点: 十亿级别的行 X 百万级别的列 大容量<br>　　大表模型(高一致性)。<br>　　Map/reduce with Hadoop 能够实时获得基于查询的优化性能的节约型网关适合:<br>　　适合：随机 实时的读写操作，高吞吐量写，随机访问大数据集。<br>　　案例： Facebook 消息数据库</p><p><a href="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=2584488483,381610203&fm=26&gp=0.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=2584488483,381610203&fm=26&gp=0.jpg" class="lazyload" title></a></p><p><strong>4、 MongoDB</strong></p><p>关键点: 强迫性一致；类SQL，容易上手 , 内置分片碎片<br>　　适合: 需要动态查询. 愿意事先定义索引indexes, 需要巨大的数据库有良好性能。<br>　　案例：适合90%所有MySQL等RDBM场合。<br>　　问题：数据集大于内存很慢。<br>　　MongoDB 使用MapReduce替代SQL的聚合功能进行分析，但是当前是单线程，并不可伸缩。</p><p><a href="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1587453130629&di=a45abc72396fc92897da77ca229db5ca&imgtype=0&src=http%3A%2F%2Fimg1.imgtn.bdimg.com%2Fit%2Fu%3D3778180096%2C2314235200%26fm%3D214%26gp%3D0.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1587453130629&di=a45abc72396fc92897da77ca229db5ca&imgtype=0&src=http%3A%2F%2Fimg1.imgtn.bdimg.com%2Fit%2Fu%3D3778180096%2C2314235200%26fm%3D214%26gp%3D0.jpg" class="lazyload" title></a></p><h2 id="SQL与NoSQL区别："><a href="#SQL与NoSQL区别：" class="headerlink" title="SQL与NoSQL区别："></a>SQL与NoSQL区别：</h2><p>1、语言</p><p>SQL数据库定义和操作基于数据的结构化查询语言（SQL）。从侧面看这种语言是非常强大的。SQL是最通用和最广泛使用的选项之一，使其成为安全的选择，尤其适用于复杂的查询。但从另一方面来说，它可能是限制性的。SQL要求您在使用之前使用预定义模式来确定数据的结构。此外，您的所有数据都必须遵循相同的结构。这可能需要大量的前期准备，这意味着结构的变化既困难又对整个系统造成破坏。</p><p>NoSQL数据库具有非结构化数据的动态模式。数据以多种方式存储，这意味着它可以是面向文档，面向列，基于图形或组织为KeyValue存储。这种灵活性意味着可以在没有首先定义结构的情况下创建文档。每个文档也可以有自己独特的结构。语法因数据库而异，您可以随时添加字段。</p><p>2、 可伸缩性</p><p>在几乎所有情况下，SQL数据库都是可垂直扩展的。这意味着您可以通过增加RAM，CPU或SSD等功能来增加单个服务器的负载。但另一方面，NoSQL数据库可以横向扩展。这意味着您可以通过分片或在NoSQL数据库中添加更多服务器来处理更多流量。它类似于在同一建筑物中添加更多楼层，而不是在附近增加更多建筑物。因此NoSQL最终可以变得更大，更强大，使这些数据库成为大型或不断变化的数据集的首选。</p><p>3、 结构</p><p>SQL数据库是基于表的，另一方面NoSQL数据库是键值对，基于文档的，图形数据库或宽列存储。这使得关系SQL数据库成为需要多行事务的应用程序（如会计系统）或为关系结构构建的遗留系统的更好选择。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NoSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GIT使用介绍</title>
      <link href="/2020/04/16/Git/"/>
      <url>/2020/04/16/Git/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>GIT简介</strong></p><p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p><p>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p><p>Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。<br><a href="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1587365740311&di=ce7a763a9cb6581344bcd1244216e792&imgtype=0&src=http%3A%2F%2Fwww.uml.org.cn%2Fpzgl%2Fimages%2F2014081232.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1587365740311&di=ce7a763a9cb6581344bcd1244216e792&imgtype=0&src=http%3A%2F%2Fwww.uml.org.cn%2Fpzgl%2Fimages%2F2014081232.png" class="lazyload" title></a></p><p><strong>Git的功能特性</strong>：<br>从一般开发者的角度来看，git有以下功能：</p><p>1、 从服务器上克隆完整的Git仓库（包括代码和版本信息）到单机上。</p><p>2、 在自己的机器上根据不同的开发目的，创建分支，修改代码。</p><p>3、 在单机上自己创建的分支上提交代码。</p><p>4、 在单机上合并分支。</p><p>5、 把服务器上最新版的代码fetch下来，然后跟自己的主分支合并。</p><p>6、 生成补丁（patch），把补丁发送给主开发者。</p><p>7、 看主开发者的反馈，如果主开发者发现两个一般开发者之间有冲突（他们之间可以合作解决的冲突），就会要求他们先解决冲突，然后再由其中一个人提交。如果主开发者可以自己解决，或者没有冲突，就通过。</p><p>8、 一般开发者之间解决冲突的方法，开发者之间可以使用pull 命令解决冲突，解决完冲突之后再向主开发者提交补丁。</p><p><strong>工作原理 / 流程：</strong></p><ul><li>Workspace：工作区</li><li>Index / Stage：暂存区</li><li>Repository：仓库区（或本地仓库）</li><li>Remote：远程仓库<br><a href="http://images2015.cnblogs.com/blog/801940/201610/801940-20161020140356295-2001303481.png" data-fancybox="group" data-caption class="fancybox"><img alt data-src="http://images2015.cnblogs.com/blog/801940/201610/801940-20161020140356295-2001303481.png" class="lazyload" title></a></li></ul><p><strong>GIt和SVN</strong><br>Git 不仅仅是个版本控制系统，它也是个内容管理系统(CMS)，工作管理系统等。</p><p>Git 与 SVN 区别点：</p><p>1、Git 是分布式的，SVN 不是：这是 Git 和其它非分布式的版本控制系统，例如 SVN，CVS 等，最核心的区别。</p><p>2、Git 把内容按元数据方式存储，而 SVN 是按文件：所有的资源控制系统都是把文件的元信息隐藏在一个类似 .svn、.cvs 等的文件夹里。</p><p>3、Git 分支和 SVN 的分支不同：分支在 SVN 中一点都不特别，其实它就是版本库中的另外一个目录。</p><p>4、Git 没有一个全局的版本号，而 SVN 有：目前为止这是跟 SVN 相比 Git 缺少的最大的一个特征。</p><p>5、Git 的内容完整性要优于 SVN：Git 的内容存储使用的是 SHA-1 哈希算法。这能确保代码内容的完整性，确保在遇到磁盘故障和网络问题时降低对版本库的破坏。<br><a href="https://www.runoob.com/wp-content/uploads/2015/02/0D32F290-80B0-4EA4-9836-CA58E22569B3.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://www.runoob.com/wp-content/uploads/2015/02/0D32F290-80B0-4EA4-9836-CA58E22569B3.jpg" class="lazyload" title></a></p><p><strong>配置</strong></p><p>1、 检查本机是否有ssh key设置</p><p>如果没有则提示： No such file or directory</p><p>如果有则进入~/.ssh路径下（ls查看当前路径文件，rm删除所有文件）</p><p>2、 使用Git Bash生成新的ssh key</p><p>$ cd ~ #保证当前路径在”~”下</p><blockquote><p>$ ssh-keygen -t rsa -C “<a href="mailto:xxxxxx@yy.com">xxxxxx@yy.com</a>“  #建议填写自己真实有效的邮箱地址<br>Generating public/private rsa key pair.<br>Enter file in which to save the key (/c/Users/xxxx_000/.ssh/id_rsa):   #不填直接回车<br>Enter passphrase (empty for no passphrase):   #输入密码（可以为空）<br>Enter same passphrase again:   #再次确认密码（可以为空）<br>Your identification has been saved in /c/Users/xxxx_000/.ssh/id_rsa.   #生成的密钥<br>Your public key has been saved in /c/Users/xxxx_000/.ssh/id_rsa.pub. #生成的公钥<br>The key fingerprint is:<br>e3:51:33:xx:xx:xx:xx:xxx:61:28:83:e2:81 <a href="mailto:xxxxxx@yy.com">xxxxxx@yy.com</a><br>//本机已完成ssh key设置，其存放路径为：c:/Users/xxxx_000/.ssh/下。<br>//可生成ssh key自定义名称的密钥，默认id_rsa。<br>$ ssh-keygen -t rsa -C “邮箱地址” -f ~/.ssh/githug_blog_keys #生成ssh key的名称为githug_blog_keys，慎用容易出现其它异常。</p></blockquote><p>3、 配置账户</p><blockquote><p>$ git config –global user.name “your_username” #设置用户名<br>$ git config –global user.email “your_registered_github_Email” #设置邮箱地址(建议用注册giuhub的邮箱)</p></blockquote><p>4、 测试ssh keys是否设置成功</p><blockquote><p>$ ssh -T <a href="mailto:git@github.com">git@github.com</a><br>The authenticity of host ‘github.com(192.30.252.129)’ can’t be established.<br>RSA key fingerprint is16:27:xx:xx:xx:xx:xx:4d:eb:df:a6:48.<br>Are you sure you want to continueconnecting (yes/no)? yes #确认你是否继续联系，输入yes<br>Warning: Permanently added’github.com,192.30.252.129’ (RSA) to the list of known hosts.<br>Enter passphrase for key’/c/Users/xxxx_000/.ssh/id_rsa’: #生成sshkye是密码为空则无此项，若设置有密码则有此项且，输入生成ssh key时设置的密码即可。<br>Hi xxx! You’ve successfullyauthenticated, but GitHub does not provide shell access. #出现词句话，说明设置成功。</p></blockquote><p><strong>使用方法</strong></p><p>使用Git前，需要先建立一个仓库(repository)。您可以使用一个已经存在的目录作为Git仓库或创建一个空目录。</p><p>使用您当前目录作为Git仓库，我们只需使它初始化。</p><blockquote><p>git init</p></blockquote><p>我们有一个仓库，但什么也没有，可以使用add命令添加文件。</p><blockquote><p>git add filename</p></blockquote><p>文件提交到仓库</p><blockquote><p>git commit</p></blockquote><p>git commit 命令的-a选项可将所有被修改或者已删除的且已经被git管理的文档提交到仓库中。</p><p>从服务器克隆一个库</p><blockquote><p>git clone</p></blockquote><p>推送到服务器</p><blockquote><p>git pull</p></blockquote><p>从资源库中删除文件，我们使用rm</p><blockquote><p>git rm file</p></blockquote><p>要创建一个新的分支，我们使用branch命令。</p><blockquote><p>git branch</p></blockquote><p>branch命令不会将我们带入分支，只是创建一个新分支。所以我们使用checkout命令来更改分支。</p><p><a href="https://i.loli.net/2020/04/20/yqVIEGitXelW4L8.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://i.loli.net/2020/04/20/yqVIEGitXelW4L8.jpg" class="lazyload" title></a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GIT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>google开发者工具使用教程</title>
      <link href="/2020/04/06/google/"/>
      <url>/2020/04/06/google/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Google Chrome是一款由Google公司开发的网页浏览器，该浏览器基于其他开源软件撰写，包括WebKit，目标是提升稳定性、速度和安全性，并创造出简单且有效率的使用者界面。</p><h1 id="一-如何调出开发者工具"><a href="#一-如何调出开发者工具" class="headerlink" title="一.如何调出开发者工具"></a>一.如何调出开发者工具</h1><ul><li><p>使用F12打开开发者工具</p></li><li><p>在页面上右键–》检查，打开开发者工具。</p></li><li><p>在浏览器有上角左键单击–》更多工具–》开发者工具（快捷键Ctrl+shift+I）<br><a href="https://i.loli.net/2020/04/06/cbZx7CiFOuz4e9M.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" data-src="https://i.loli.net/2020/04/06/cbZx7CiFOuz4e9M.png" class="lazyload" title="1.png"></a></p></li></ul><p><a href="https://i.loli.net/2020/04/06/1XazNIdZpgCMuYs.png" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" data-src="https://i.loli.net/2020/04/06/1XazNIdZpgCMuYs.png" class="lazyload" title="2.png"></a></p><h1 id="二-开发者工具初步介绍"><a href="#二-开发者工具初步介绍" class="headerlink" title="二.开发者工具初步介绍"></a>二.开发者工具初步介绍</h1><p>chrome开发者工具最常用的四个功能模块：元素（ELements）、控制台（Console）、源代码（Sources），网络（Network）。</p><ul><li><p>元素（Elements）：用于查看或修改HTML元素的属性、CSS属性、监听事件、断点等。css可以即时修改，即时显示。大大方便了开发者调试页面</p></li><li><p>控制台（Console）：控制台一般用于执行一次性代码，查看JavaScript对象，查看调试日志信息或异常信息。还可以当作Javascript API查看用。例如我想查看console都有哪些方法和属性，我可以直接在Console中输入”console”并执行~</p></li><li><p>源代码（Sources）：该页面用于查看页面的HTML文件源代码、JavaScript源代码、CSS源代码，此外最重要的是可以调试JavaScript源代码，可以给JS代码添加断点等。</p></li><li><p>网络（Network）：网络页面主要用于查看header等与网络连接相关的信息。</p><h2 id="Elements面板"><a href="#Elements面板" class="headerlink" title="Elements面板"></a>Elements面板</h2><p>这个就是查看、编辑页面上的元素，包括HTML和CSS：<br><a href="https://i.loli.net/2020/04/06/7MA1NWPitKTovyY.png" data-fancybox="group" data-caption="3.png" class="fancybox"><img alt="3.png" data-src="https://i.loli.net/2020/04/06/7MA1NWPitKTovyY.png" class="lazyload" title="3.png"></a></p></li></ul><p>左侧就是对页面HTML结构的查看与编辑，你可以直接在某个元素上双击修改元素的属性，或者你点右键选”Edit as Html”直接对元素的HTML进行编辑，或者删除某个元素，所有的修改都会即时在页面上得到呈现。（注：看到上面右键菜单的最后一个选项”审查元素”了么？这是不是说明这个开发者工具的页面也是HTML来的呢？你点一下就知道了哦，嘿嘿）<br>你还可以对某个元素进行监听，在JS对元素的属性或者HTML进行修改的时候，直接触发断点，跳转到对改元素进行修改的JS代码处：</p><p>Elements标签页的右侧可以对元素的CSS进行查看与编辑修改：</p><p>你还可以通过这里看到各CSS选择器设置的CSS值的覆盖情况。<br>下面的Metrics可以看到元素占的空间情况（宽、高、Padding、Margin神马的）：</p><p><a href="https://i.loli.net/2020/04/06/z4t1k5pCIiERWHf.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" data-src="https://i.loli.net/2020/04/06/z4t1k5pCIiERWHf.png" class="lazyload" title="1.png"></a></p><p>注意到上面的Properties没有？这个很有用哦，可以让你看到元素具有的方法与属性，比查API手册要方便得多哦（要注意某些方法和属性在IE、FireFox等其他浏览器下面的支持情况哦）。</p><h2 id="Console面板"><a href="#Console面板" class="headerlink" title="Console面板"></a>Console面板</h2><p>就是Javascript控制台了：<br><a href="https://i.loli.net/2020/04/06/osWixav18NGQRD9.png" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" data-src="https://i.loli.net/2020/04/06/osWixav18NGQRD9.png" class="lazyload" title="2.png"></a></p><p>这个除了查看错误信息、打印调试信息（console.log()）、写一些测试脚本以外，还可以当作Javascript API查看用。<br>例如我想查看console都有哪些方法和属性，我可以直接在Console中输入”console”并执行：<br>目前控制台方法和属性有：<br>[“$$”, “$x”, “dir”, “dirxml”, “keys”, “values”, “profile”, “profileEnd”, “monitorEvents”, “unmonitorEvents”, “inspect”, “copy”, “clear”, “getEventListeners”, “undebug”, “monitor”, “unmonitor”, “table”, “$0”, “$1”, “$2”, “$3”, “$4”, “$_”]<br>一般情况下我们用来输入信息的方法主要是用到如下四个</p><ul><li>console.log 用于输出普通信息</li><li>console.info 用于输出提示性信息</li><li>console.error用于输出错误信息</li><li>console.warn用于输出警示信息</li><li>console.debug用于输出调试信息</li></ul><h2 id="Resources面板"><a href="#Resources面板" class="headerlink" title="Resources面板"></a>Resources面板</h2><p><a href="https://i.loli.net/2020/04/06/DUMXfmanEF9WbVP.png" data-fancybox="group" data-caption="3.png" class="fancybox"><img alt="3.png" data-src="https://i.loli.net/2020/04/06/DUMXfmanEF9WbVP.png" class="lazyload" title="3.png"></a></p><p>Resources标签页可以查看到请求的资源情况，包括CSS、JS、图片等的内容，同时还可以查看到存储相关的如Cookies、HTML5的Database和LocalStore等，你可以对存储的内容编辑和删除。<br>这里的CSS文件有一个好玩的特性，你可以直接修改CSS文件，并且修改即时生效哦：</p><p>添加断点：在源代码左边有行号，点击对应行的行号，就好给改行添加上一个断点（再次点击可删除断点）。右键点击断点，在弹出的菜单中选择Edit breakpoint可以给该断的添加中断条件。</p><p>中断调试：添加断点后，当JS代码运行到断点时会中断（对于添加了中断条件的断点在符合条件时中断），此时可以将光标放在变量上查看变量的</p><h2 id="Network面板"><a href="#Network面板" class="headerlink" title="Network面板"></a>Network面板</h2><p><a href="https://i.loli.net/2020/04/06/FGjEyqUrNgw2sBX.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" data-src="https://i.loli.net/2020/04/06/FGjEyqUrNgw2sBX.png" class="lazyload" title="1.png"></a></p><p>Network标签页对于分析网站请求的网络情况、查看某一请求的请求头和响应头还有响应内容很有用，特别是在查看Ajax类请求的时候，非常有帮助。注意是在你打开Chrome开发者工具后发起的请求，才会在这里显示的哦。<br>点击左侧某一个具体去请求URL，可以看到该请求的详细HTTP请求情况：<br><a href="https://i.loli.net/2020/04/06/ZDzY2QpVEW4cykM.png" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" data-src="https://i.loli.net/2020/04/06/ZDzY2QpVEW4cykM.png" class="lazyload" title="2.png"></a></p><p>我们可以在这里看到HTTP请求头、HTTP响应头、HTTP返回的内容等信息，对于开发、调试，都是很有用的。</p><h3 id="请求文件具体说明"><a href="#请求文件具体说明" class="headerlink" title="请求文件具体说明"></a>请求文件具体说明</h3><ul><li><p>Headers<br>Header面板列出资源的请求url、HTTP方法、响应状态码、请求头和响应头及它们各自的值、请求参数等等<br><a href="https://i.loli.net/2020/04/06/a7quxNPyUjYGiVl.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" data-src="https://i.loli.net/2020/04/06/a7quxNPyUjYGiVl.png" class="lazyload" title="1.png"></a></p></li><li><p>Preview：预览面板，用于资源的预览<br><a href="https://i.loli.net/2020/04/06/eqzrWInLmcGBVDK.png" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" data-src="https://i.loli.net/2020/04/06/eqzrWInLmcGBVDK.png" class="lazyload" title="2.png"></a></p></li><li><p>Response：响应信息面板包含资源还未进行格式处理的内容<br><a href="https://i.loli.net/2020/04/06/KNmepAYX14kxVIQ.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" data-src="https://i.loli.net/2020/04/06/KNmepAYX14kxVIQ.png" class="lazyload" title="1.png"></a></p></li><li><p>Timing：资源请求的详细信息花费时间<br><a href="https://i.loli.net/2020/04/06/5wvdpWZXzIc8Pai.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" data-src="https://i.loli.net/2020/04/06/5wvdpWZXzIc8Pai.png" class="lazyload" title="1.png"></a></p><h2 id="performance面板"><a href="#performance面板" class="headerlink" title="performance面板"></a>performance面板</h2><p><a href="https://i.loli.net/2020/04/06/kBhFzR7wAWP98GJ.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" data-src="https://i.loli.net/2020/04/06/kBhFzR7wAWP98GJ.png" class="lazyload" title="1.png"></a><br>1、操作区域：包含录制，刷新页面分析，清除结果等一系列操作</p></li><li><p>开始录制按钮(window下快捷键ctrl+E)</p></li><li><p>重新录制按钮</p></li><li><p>清空录制信息</p></li><li><p>打开本地录制文件</p></li><li><p>保存当前录制数据</p></li><li><p>多个录屏的切换</p></li><li><p>是否屏幕快照（勾选了，总览图中会有一系列的屏幕快照，位置在Net和HEAP之间；反之，不会显示屏幕快照）</p></li><li><p>是否显示内存（勾选了，总览图中的屏幕快照下面有一个Heap，就是我们通俗所说的内存）</p></li><li><p>垃圾回收</p></li><li><p>禁止脚本样本（勾选了，在详情区域的Main区域不会显示js事件的调用 ；反之会的。这里可以通过两个录制来看一下【禁止时候的火焰图明显低一些】）</p></li><li><p>调整网络状态（模拟一些网络不好的状况）</p></li><li><p>是否开启加速渲染（默认不用勾选，这个不具体展开）</p></li><li><p>cpu性能设置（可以调整4xslowdown来模拟手机运行）</p></li></ul><p>2、overview总览图：高度概括随时间线的变动，包括FPS，CPU，NET</p><ul><li>FPS。每秒帧数。绿色竖线越高，FPS 越高。 FPS 图表上的红色块表示长时间帧，很可能会出现卡顿</li><li>CPU。 CPU 资源。此面积图指示消耗 CPU 资源的事件类型，不同颜色代表不同资源<br>【蓝色(Loading)：网络通信和HTML解析<br>黄色(Scripting)：JavaScript执行<br>紫色(Rendering)：样式计算和布局，即重排<br>绿色(Painting)：重绘<br>灰色(other)：其它事件花费的时间<br>白色(Idle)：空闲时间）<br>】</li><li>NET。有两条蓝色的长条，深蓝代表优先级比较高的请求，浅蓝代表优先级比较低的请求</li><li>屏幕快照。可以把鼠标放到总览图区域会有一个屏幕快照的弹框图</li><li>HEAP。这就是通常说的内存</li></ul><p>3、详情区域：从不同的角度分析框选区域 。例如：Network，Frames, Interactions, Main等</p><ul><li><p>详情区域主要包括两个部分：上半部分（内存情况）和下半部分（选中的时间段的是事件相关信息统计）<br>4、总结区域：精确到毫秒级的分析，以及按调用层级，事件分类的整理</p></li><li><p>内存情况：<br>JS Heap:js堆<br>Documents:文档数<br>Nodes:DOM 节点数<br>Listeners:监听数<br>GPU Memory:GPU内存</p></li><li><p>总结情况<br>summary:按照网页显示的整个过程，统计每个阶段花费的时间【loading/scripting/rendering/painting/other/idle】<br>Bottom-Up:按照事件花费的时间长短来排序的<br>Call Tree:按照调用顺序来排序的【从根调用事件到当前选中事件】<br>Event Log：按照事件发生的先后顺序排序，显示的事件的详细信息</p><h2 id="Memory面板简介"><a href="#Memory面板简介" class="headerlink" title="Memory面板简介"></a>Memory面板简介</h2><p>如果想要看更多的内存信息快照，则需要打开 Chrome 浏览器的开发者工具中的 Memory 面板了，下面就简单介绍一下该面板的使用。<br>它大概是长这样：<br><a href="https://i.loli.net/2020/04/06/gMup2CUaZQPe3nv.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" data-src="https://i.loli.net/2020/04/06/gMup2CUaZQPe3nv.png" class="lazyload" title="1.png"></a><br>上面有三个按钮：</p></li><li><p>Heap snapshot - 用以打印堆快照，堆快照文件显示页面的 javascript 对象和相关 DOM 节点之间的内存分配</p></li><li><p>Allocation instrumentation on timeline - 在时间轴上记录内存信息，随着时间变化记录内存信息。</p></li><li><p>Allocation sampling - 内存信息采样，使用采样的方法记录内存分配。此配置文件类型具有最小的性能开销，可用于长时间运行的操作。它提供了由 javascript 执行堆栈细分的良好近似值分配。</p><h2 id="Application面板简介"><a href="#Application面板简介" class="headerlink" title="Application面板简介"></a>Application面板简介</h2><p>该面板主要是记录网站加载的所有资源信息，包括存储数据（Local Storage、Session Storage、IndexedDB、Web SQL、Cookies）、缓存数据、字体、图片、脚本、样式表等。</p></li></ul><p>这个面板跟前前面几道硬菜（Network面板、Timeline面板、Profiles面板）比起来简单多了，这里就稍微作一下介绍：</p><ul><li>Local Storage 如果你在开发过程中使用了local storage来存储键值对(KVPs)，那么你就可以通过Local Storage窗格来检查、新增、修改、删除这个键值对。</li><li>Application Cache 你可以使用Application Cache窗格去查看通过Application Cache API创建的资源。</li><li>Frames 将页面上的资源按frame类别进行组织显示</li></ul><h2 id="Security面板简介"><a href="#Security面板简介" class="headerlink" title="Security面板简介"></a>Security面板简介</h2><p>HTTPS（Hyper Text Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。 它是一个URI scheme（抽象标识符体系），句法类同http:体系。用于安全的HTTP数据传输。https:URL表明它使用了HTTP，但HTTPS存在不同于HTTP的默认端口及一个加密/身份验证层（在HTTP与TCP之间）。</p><h3 id="HTTPS和HTTP的区别主要为以下四点："><a href="#HTTPS和HTTP的区别主要为以下四点：" class="headerlink" title="HTTPS和HTTP的区别主要为以下四点："></a>HTTPS和HTTP的区别主要为以下四点：</h3><p>① https协议需要到CA申请证书，一般免费证书很少，需要交费。<br>② http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议。<br>③ http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。<br>④ http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。</p><p>如果网页是安全的，则会显示这样一条消息：This page is secure (valid HTTPS).。</p><p>通过点击View certificate可以查看main origin的服务器证书信息。<br>点击左侧可以查看指定源的连接和证书详情。</p><p>如果网页是不安全的，则会显示：This page is not secure.。</p><p>该面板可以区分两种类型的不安全的页面：</p><p>如果被请求的页面通过HTTP提供服务，那么这个主源就会被标记为不安全。<br>如果被请求的页面是通过HTTPS获取的，但这个页面接着通过HTTP继续从其他来源检索内容，那么这个页面仍然被标记为不安全。这就是所谓的混合内容页面,混合内容页面只是部分受到保护,因为HTTP内容(非加密的内容)可以被嗅探者入侵,容易受到中间人攻击。</p><h2 id="Audits面板简介"><a href="#Audits面板简介" class="headerlink" title="Audits面板简介"></a>Audits面板简介</h2><p>这个对于优化前端页面、加速网页加载速度很有用哦（相当与Yslow）：</p><p>点击run按钮，就可以开始分析页面，分析完了就可以看到分析结果了：</p><p>它甚至可以分析出页面上样式表中有哪些CSS是没有被使用的哦：</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> google </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用网站及工具</title>
      <link href="/2020/04/06/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99%E5%8F%8A%E5%B7%A5%E5%85%B7/"/>
      <url>/2020/04/06/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99%E5%8F%8A%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="炫猿导航"><a href="#炫猿导航" class="headerlink" title="炫猿导航"></a>炫猿导航</h2><p><strong>官网: <a href="https://xydh.fun/" target="_blank" rel="noopener">https://xydh.fun/</a></strong></p><p>入眼即是12大板块的资源分类得井然有序，开发者也是非常细致地搜集进一些优质软件和网站、云网盘、电影、音乐、图书、学习、生活等类资源，大致估摸着有100多款的工具利器，功能强大。<br><a href="https://i.loli.net/2020/04/15/PUJ9MynZ2FXabiD.png" data-fancybox="group" data-caption="11.png" class="fancybox"><img alt="11.png" data-src="https://i.loli.net/2020/04/15/PUJ9MynZ2FXabiD.png" class="lazyload" title="11.png"></a><br>这里有一个合作的同类网站，也是提供各类资源的一个优质聚合网。<br><a href="https://i.loli.net/2020/04/15/aCEsZmpb9kMthHq.png" data-fancybox="group" data-caption="22.png" class="fancybox"><img alt="22.png" data-src="https://i.loli.net/2020/04/15/aCEsZmpb9kMthHq.png" class="lazyload" title="22.png"></a></p><hr><h2 id="轻松玩转PDF"><a href="#轻松玩转PDF" class="headerlink" title="轻松玩转PDF"></a>轻松玩转PDF</h2><p><strong>官网: <a href="https://smallpdf.com/cn" target="_blank" rel="noopener">https://smallpdf.com/cn</a></strong></p><p>功能一应俱全、简单好用的线上 PDF 工具<br><a href="https://i.loli.net/2020/04/15/yiQcNPhLsnOUbzC.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" data-src="https://i.loli.net/2020/04/15/yiQcNPhLsnOUbzC.png" class="lazyload" title="1.png"></a></p><hr><h2 id="在线文件转换"><a href="#在线文件转换" class="headerlink" title="在线文件转换"></a>在线文件转换</h2><p><strong>官网: <a href="https://convertio.co/zh/" target="_blank" rel="noopener">https://convertio.co/zh/</a></strong></p><p>将您的文件转换成任意格式<br><a href="https://i.loli.net/2020/04/15/x7FkYgbE1piADQ8.png" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" data-src="https://i.loli.net/2020/04/15/x7FkYgbE1piADQ8.png" class="lazyload" title="2.png"></a></p><hr><h2 id="ppt模板"><a href="#ppt模板" class="headerlink" title="ppt模板"></a>ppt模板</h2><ol><li><p>51ppt官网:  <a href="http://www.51pptmoban.com" target="_blank" rel="noopener">http://www.51pptmoban.com</a></p></li><li><p>第1ppt官网: <a href="http://www.1ppt.com/" target="_blank" rel="noopener">http://www.1ppt.com/</a></p></li><li><p>优品ppt<a href="http://www.ypppt.com/" target="_blank" rel="noopener">http://www.ypppt.com/</a></p></li></ol><p>免费ppt模板大全<br><a href="https://i.loli.net/2020/04/15/Xu7O1SLthgsW3br.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" data-src="https://i.loli.net/2020/04/15/Xu7O1SLthgsW3br.png" class="lazyload" title="1.png"></a></p><hr><h2 id="非常全的外刊网站-MagazineLib"><a href="#非常全的外刊网站-MagazineLib" class="headerlink" title="非常全的外刊网站-MagazineLib"></a>非常全的外刊网站-MagazineLib</h2><p><strong>官网: <a href="https://magazinelib.com/" target="_blank" rel="noopener">https://magazinelib.com/</a></strong></p><p>非常全的外刊网站，基本上想看的外刊都有(可下载）<br><a href="https://pic1.zhimg.com/80/v2-5f39d9a6f9b8338b682f3239c172e26f_720w.jpg" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" data-src="https://pic1.zhimg.com/80/v2-5f39d9a6f9b8338b682f3239c172e26f_720w.jpg" class="lazyload" title="2.png"></a></p><hr><h2 id="万花筒"><a href="#万花筒" class="headerlink" title="万花筒"></a>万花筒</h2><p><strong>官网: <a href="https://wht.im/" target="_blank" rel="noopener">https://wht.im/</a></strong></p><p>一个极简的网址导航，聚合了多种搜索引擎，也收录了各种常用的网站。分类合，内容齐全。<br><a href="https://pic2.zhimg.com/80/v2-bebebdae7a580ee0e276cc22b8ace9ea_720w.jpg" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" data-src="https://pic2.zhimg.com/80/v2-bebebdae7a580ee0e276cc22b8ace9ea_720w.jpg" class="lazyload" title="2.png"></a></p><hr><h2 id="音乐下载"><a href="#音乐下载" class="headerlink" title="音乐下载"></a>音乐下载</h2><p>官网1: <a href="http://www.gequdaquan.net/gqss/" target="_blank" rel="noopener">http://www.gequdaquan.net/gqss/</a></p><p>官网2: <a href="http://www.musictool.top/" target="_blank" rel="noopener">http://www.musictool.top/</a></p><p>音乐大全<br><a href="https://seechina365.com/wp-content/uploads/musiccc01.jpg" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" data-src="https://seechina365.com/wp-content/uploads/musiccc01.jpg" class="lazyload" title="2.png"></a></p><hr><h2 id="搜索工具"><a href="#搜索工具" class="headerlink" title="搜索工具"></a>搜索工具</h2><p>官网1: <a href="https://bigezhang.com/so" target="_blank" rel="noopener">https://bigezhang.com/so</a></p><p>官网2: <a href="https://search.chongbuluo.com/" target="_blank" rel="noopener">https://search.chongbuluo.com/</a></p><p>一个极简的网址导航，聚合了多种搜索引擎，也收录了各种常用的网站。分类合，内容齐全。<br><a href="http://img.jusoucn.com/data/upload/image/201907/a1e96e613f31ea9124ef4de489a1b980.png" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" data-src="http://img.jusoucn.com/data/upload/image/201907/a1e96e613f31ea9124ef4de489a1b980.png" class="lazyload" title="2.png"></a></p><hr><h2 id="影视大全"><a href="#影视大全" class="headerlink" title="影视大全"></a>影视大全</h2><ol><li><p>电影天堂: <a href="http://t.cn/R0HK0BP" target="_blank" rel="noopener">http://t.cn/R0HK0BP</a></p></li><li><p>疯狂影视搜索 : <a href="http://t.cn/RXnQLYO" target="_blank" rel="noopener"> http://t.cn/RXnQLYO</a></p></li><li><p>优质电影网  : <a href="http://t.cn/RLGSHq6" target="_blank" rel="noopener">http://t.cn/RLGSHq6</a></p></li><li><p>美剧  : <a href="http://www.6vhao.tv/mj/" target="_blank" rel="noopener">http://www.6vhao.tv/mj/</a></p></li></ol><p><a href="http://www.youzhidy.com/uploads/allimg/200209/1-2002091340291Z.jpg" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" data-src="http://www.youzhidy.com/uploads/allimg/200209/1-2002091340291Z.jpg" class="lazyload" title="2.png"></a></p><hr><h2 id="数据-类网站"><a href="#数据-类网站" class="headerlink" title="数据 类网站"></a>数据 类网站</h2><ol><li><p>艾瑞咨询: <a href="https://www.iresearch.com.cn/" target="_blank" rel="noopener">https://www.iresearch.com.cn/</a></p></li><li><p>腾讯大数据 : <a href="https://data.qq.com/" target="_blank" rel="noopener"> https://data.qq.com/</a></p></li><li><p>新榜 : <a href="https://www.newrank.cn/" target="_blank" rel="noopener">https://www.newrank.cn/</a></p></li></ol><p><a href="https://pic2.zhimg.com/80/v2-3793d3ca3a5cf11907d707291da76c18_720w.jpg" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" data-src="https://pic2.zhimg.com/80/v2-3793d3ca3a5cf11907d707291da76c18_720w.jpg" class="lazyload" title="2.png"></a></p><hr><h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><ol><li><p>吾爱破解: <a href="https://www.52pojie.cn/" target="_blank" rel="noopener">https://www.52pojie.cn/</a></p></li><li><p>GO破解 : <a href="https://www.gopojie.net/" target="_blank" rel="noopener">https://www.gopojie.net/</a></p></li><li><p>ZD423: <a href="https://m.zdfans.com//" target="_blank" rel="noopener">https://m.zdfans.com/</a></p></li><li><p>软件缘: <a href="https://www.appcgn.com/" target="_blank" rel="noopener">https://www.appcgn.com/</a></p></li><li><p>爱软客 : <a href="http://www.bokeboke.net/" target="_blank" rel="noopener">http://www.bokeboke.net/</a></p></li><li><p>分享者: <a href="http://www.sharerw.com/" target="_blank" rel="noopener">http://www.sharerw.com/</a></p></li></ol><hr><ul><li>好用网站<a href="https://www.zhihu.com/question/311420011" target="_blank" rel="noopener">https://www.zhihu.com/question/311420011</a></li></ul><ul><li><p>好用网站<a href="https://www.zhihu.com/question/345910983" target="_blank" rel="noopener">https://www.zhihu.com/question/345910983</a></p></li><li><p>好用网站<a href="https://zhuanlan.zhihu.com/p/91748529" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/91748529</a></p></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实用网站及工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用的数据结构：数组，栈，链表，队列，树，图，堆，散列表</title>
      <link href="/2020/04/05/data%20struct/"/>
      <url>/2020/04/05/data%20struct/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>常用的数据结构有：数组，栈，链表，队列，树，图，堆，散列表等。</p><p>每一种数据结构都有着独特的数据存储方式，下面为大家介绍它们的结构和优缺点。</p><p><a href="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2342770679,2195164754&fm=26&gp=0.jpg" data-fancybox="group" data-caption="3.jpeg" class="fancybox"><img alt="3.jpeg" data-src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2342770679,2195164754&fm=26&gp=0.jpg" class="lazyload" title="3.jpeg"></a></p><hr><h1 id="1、数组"><a href="#1、数组" class="headerlink" title="1、数组"></a>1、数组</h1><h2 id><a href="#" class="headerlink" title></a><a href="https://i.loli.net/2020/04/05/f24nrTsY6VU1kKy.jpg" data-fancybox="group" data-caption="3.jpeg" class="fancybox"><img alt="3.jpeg" data-src="https://i.loli.net/2020/04/05/f24nrTsY6VU1kKy.jpg" class="lazyload" title="3.jpeg"></a></h2><p>数组是可以再内存中连续存储多个元素的结构，在内存中的分配也是连续的，数组中的元素通过数组下标进行访问，数组下标从0开始。例如下面这段代码就是将数组的第一个元素赋值为1。</p><p>arr是数组的名字,后面的” [] “表示哪一个数据,这里面的数字叫做数组下标,或者叫索引,下标是从0开始计数,比如想要查询小红的话则是” arr[1] </p><p>数组的数据是按照顺序存储在内存中连续的空间,所以内存中的每个数据都可以通过下标来取得,这样就可以直接进行访问数据,如果我们使用链表的话,那么就需要指针一个个去查询数据,数组可以直接访问,这样查询效率就会大大提升,但是想要在任意未知去添加数据和删除数据的话,那么数组的操作就比链表难多了,如果我们想把” 小王 “加入到小明的后面,也就是 arr[1] 的位置,首先数组的末尾需要有足够的空间,(java中数组的长度一但初始化就不可改变,所以要保证有足够的空间来存放想要添加的数据),如果已经有空间,那么我们需要将小黑向后移动一位,然后小红向后移动一位,当arr[1] 的空间空出来的时候,才能把小王添加进去,这样的话数组的添加操作才能完成,相反如果想要删除掉小王的话,那么就需要删除目标的数据,也就是arr[1]的位置,然后把后面的数据往前移动,最后删除掉多余的空间即可</p><p>数组的查询数据的时间复杂度为O(1),删除和添加则为O(n),正好和链表相反</p><p><strong>优点：</strong><br>1、 按照索引查询元素快</p><p>2、 按照索引遍历数组方便</p><p><strong>缺点：</strong></p><p>1、 数组的大小固定后就无法扩容了</p><p>2、 数组只能存储一种类型的数据</p><p>3、 添加，删除的操作慢，因为要移动其他的元素。</p><p>适用场景：</p><p>频繁查询，对存储空间要求不大，很少增加和删除的情况。</p><hr><h1 id="2、栈"><a href="#2、栈" class="headerlink" title="2、栈"></a>2、栈</h1><p><a href="https://i.loli.net/2020/04/05/Ou7xtFkvKmTPQA4.jpg" data-fancybox="group" data-caption="2.jpeg" class="fancybox"><img alt="2.jpeg" data-src="https://i.loli.net/2020/04/05/Ou7xtFkvKmTPQA4.jpg" class="lazyload" title="2.jpeg"></a></p><p>栈是一种特殊的线性表，仅能在线性表的一端操作，栈顶允许操作，栈底不允许操作。 栈的特点是：先进后出，或者说是后进先出，从栈顶放入元素的操作叫入栈，取出元素叫出栈。</p><p>栈的结构就像一个集装箱，越先放进去的东西越晚才能拿出来，所以，栈常应用于实现递归功能方面的场景，例如斐波那契数列。</p><hr><h1 id="3、队列"><a href="#3、队列" class="headerlink" title="3、队列"></a>3、队列</h1><p><a href="https://i.loli.net/2020/04/05/zKjpIbo38k4TH7J.jpg" data-fancybox="group" data-caption="4.jpeg" class="fancybox"><img alt="4.jpeg" data-src="https://i.loli.net/2020/04/05/zKjpIbo38k4TH7J.jpg" class="lazyload" title="4.jpeg"></a></p><p>队列与栈一样，也是一种线性表，不同的是，队列可以在一端添加元素，在另一端取出元素，也就是：先进先出。从一端放入元素的操作称为入队，取出元素为出队，示例图如下：</p><p>适用场景：因为队列先进先出的特点，在多线程阻塞队列管理中非常适用。</p><hr><h1 id="4、链表"><a href="#4、链表" class="headerlink" title="4、链表"></a>4、链表</h1><p><a href="https://i.loli.net/2020/04/05/6kCJLnxbsdASDPK.jpg" data-fancybox="group" data-caption="5.jpeg" class="fancybox"><img alt="5.jpeg" data-src="https://i.loli.net/2020/04/05/6kCJLnxbsdASDPK.jpg" class="lazyload" title="5.jpeg"></a></p><p>链表是物理存储单元上非连续的、非顺序的存储结构，数据元素的逻辑顺序是通过链表的指针地址实现，每个元素包含两个结点，一个是存储元素的数据域 (内存空间)，另一个是指向下一个结点地址的指针域。根据指针的指向，链表能形成不同的结构，例如单链表，双向链表，循环链表等。</p><p><strong>优点：</strong></p><p>1、 链表是很常用的一种数据结构，不需要初始化容量，可以任意加减元素；</p><p>2、 添加或者删除元素时只需要改变前后两个元素结点的指针域指向地址即可，所以添加，删除很快；</p><p><strong>缺点：</strong></p><p>1、 因为含有大量的指针域，占用空间较大；</p><p>2、 查找元素需要遍历链表来查找，非常耗时。</p><p>适用场景：<br>数据量较小，需要频繁增加，删除操作的场景</p><hr><h1 id="5、树"><a href="#5、树" class="headerlink" title="5、树"></a>5、树</h1><p><a href="https://i.loli.net/2020/04/05/5iFQp2zevNMjoqy.jpg" data-fancybox="group" data-caption="6.jpeg" class="fancybox"><img alt="6.jpeg" data-src="https://i.loli.net/2020/04/05/5iFQp2zevNMjoqy.jpg" class="lazyload" title="6.jpeg"></a></p><p>树是一种数据结构，它是由n（n&gt;=1）个有限节点组成一个具有层次关系的集合。把它叫做 “树” 是因为它看起来像一棵倒挂的树，也就是说它是根朝上，而叶朝下的。它具有以下的特点：</p><p>1、每个节点有零个或多个子节点；</p><p>2、没有父节点的节点称为根节点；</p><p>3、每一个非根节点有且只有一个父节点；</p><p>4、除了根节点外，每个子节点可以分为多个不相交的子树；</p><p>在日常的应用中，我们讨论和用的更多的是树的其中一种结构，就是二叉树。<br>二叉树是树的特殊一种，具有如下特点：</p><p>1、每个结点最多有两颗子树，结点的度最大为2。</p><p>2、左子树和右子树是有顺序的，次序不能颠倒。</p><p>3、即使某结点只有一个子树，也要区分左右子树。</p><p>二叉树是一种比较有用的折中方案，它添加，删除元素都很快，并且在查找方面也有很多的算法优化，所以，二叉树既有链表的好处，也有数组的好处，是两者的优化方案，在处理大批量的动态数据方面非常有用。</p><p><strong>扩展：</strong><br> 二叉树有很多扩展的数据结构，包括平衡二叉树、红黑树、B+树等，这些数据结构二叉树的基础上衍生了很多的功能，在实际应用中广泛用到，例如mysql的数据库索引结构用的就是B+树，还有HashMap的底层源码中用到了红黑树。这些二叉树的功能强大，但算法上比较复杂，想学习的话还是需要花时间去深入的。</p><hr><h1 id="6、散列表"><a href="#6、散列表" class="headerlink" title="6、散列表"></a>6、散列表</h1><p><a href="https://i.loli.net/2020/04/05/eKhcRydQr5u2wgk.jpg" data-fancybox="group" data-caption="1.jpeg" class="fancybox"><img alt="1.jpeg" data-src="https://i.loli.net/2020/04/05/eKhcRydQr5u2wgk.jpg" class="lazyload" title="1.jpeg"></a></p><p>散列表，也叫哈希表，是根据关键码和值 (key和value) 直接进行访问的数据结构，通过key和value来映射到集合中的一个位置，这样就可以很快找到集合中的对应元素。</p><p>记录的存储位置=f(key)</p><p>这里的对应关系 f 成为散列函数，又称为哈希 (hash函数)，而散列表就是把Key通过一个固定的算法函数既所谓的哈希函数转换成一个整型数字，然后就将该数字对数组长度进行取余，取余结果就当作数组的下标，将value存储在以该数字为下标的数组空间里，这种存储空间可以充分利用数组的查找优势来查找元素，所以查找的速度很快。</p><p>哈希表在应用中也是比较常见的，就如Java中有些集合类就是借鉴了哈希原理构造的，例如HashMap，HashTable等，利用hash表的优势，对于集合的查找元素时非常方便的，然而，因为哈希表是基于数组衍生的数据结构，在添加删除元素方面是比较慢的，所以很多时候需要用到一种数组链表来做，也就是拉链法。拉链法是数组结合链表的一种结构，较早前的hashMap底层的存储就是采用这种结构，直到jdk1.8之后才换成了数组加红黑树的结构，其示例图如下：</p><p>从图中可以看出，左边很明显是个数组，数组的每个成员包括一个指针，指向一个链表的头，当然这个链表可能为空，也可能元素很多。我们根据元素的一些特征把元素分配到不同的链表中去，也是根据这些特征，找到正确的链表，再从链表中找出这个元素。</p><p>哈希表的应用场景很多，当然也有很多问题要考虑，比如哈希冲突的问题，如果处理的不好会浪费大量的时间，导致应用崩溃。</p><hr><h1 id="7、堆"><a href="#7、堆" class="headerlink" title="7、堆"></a>7、堆</h1><p><a href="https://i.loli.net/2020/04/05/uTBxQsWoh35iUgV.jpg" data-fancybox="group" data-caption="7.jpeg" class="fancybox"><img alt="7.jpeg" data-src="https://i.loli.net/2020/04/05/uTBxQsWoh35iUgV.jpg" class="lazyload" title="7.jpeg"></a></p><p>堆是一种比较特殊的数据结构，可以被看做一棵树的数组对象，具有以下的性质：</p><p>堆中某个节点的值总是不大于或不小于其父节点的值；</p><p>堆总是一棵完全二叉树。</p><p>将根节点最大的堆叫做最大堆或大根堆，根节点最小的堆叫做最小堆或小根堆。常见的堆有二叉堆、斐波那契堆等。</p><p>堆的定义如下：n个元素的序列{k1,k2,ki,…,kn}当且仅当满足下关系时，称之为堆。</p><p>(ki &lt;= k2i,ki &lt;= k2i+1)或者(ki &gt;= k2i,ki &gt;= k2i+1), (i = 1,2,3,4…n/2)，满足前者的表达式的成为小顶堆，满足后者表达式的为大顶堆，这两者的结构图可以用完全二叉树排列出来，示例图如下：</p><p>因为堆有序的特点，一般用来做数组中的排序，称为堆排序。</p><h1 id="8、图"><a href="#8、图" class="headerlink" title="8、图"></a>8、图</h1><p><a href="https://i.loli.net/2020/04/05/whcj1ieqQYVtPra.jpg" data-fancybox="group" data-caption="8.jpeg" class="fancybox"><img alt="8.jpeg" data-src="https://i.loli.net/2020/04/05/whcj1ieqQYVtPra.jpg" class="lazyload" title="8.jpeg"></a></p><p><strong>图的定义：</strong><br>　　一个图G = (V,E)由顶点(vertex)集 V 合边(edge)集 E 组成。每条边(v,w)就是一个点对,其中v,w ∈ V。有时也把边称作弧。如果点对是有序的，那么图就叫做有向图。顶点 v 和 w 领接边 (v,w) ∈ E。在一个具有边(v,w)从而具有边(w,v)的无向图，w和v邻接那v和w也邻接。</p><p><strong>图的基本术语：</strong><br>1、 阶（Order）：图G中顶集V的大小称作图G的阶。</p><p>2、 子图（Sub-Graph）：G’称作图G=(V,E)的子图，当图G’=(V’,E’)，且V‘包含于V，E’包含于E。每个图都是本身的子图。</p><p>3、 生成子图（Spanning Sub-Graph）：指满足条件V(G’) = V(G)的G的子图G。</p><p>4、 度（Degree）：一个顶点的度是指与该边相关联的边的条数，顶点v的度记作d(v)。</p><p>5、 入度（In-degree）和出度（Out-degree）：对于有向图来说，一个顶点的度可细分为入度和出度。一个顶点的入度是指与其关联的各边之中，以其为终点的边数；出度则是相对的概念，指以该顶点为起点的边数。</p><p>6、 自环（Loop）：若一条边的两个顶点为同一顶点，则此边称作自环。</p><p>7、 路径（Path）：从u到v的一条路径是指一个序列v0,e1,v1,e2,v2,…ek,vk，其中ei的顶点为vi及vi - 1，k称作路径的长度。如果它的起止顶点相同，该路径是“闭”的，反之，则称为“开”的。一条路径称为一简单路径(simple path)，如果路径中除起始与终止顶点可以重合外，所有顶点两两不等。</p><p>8、 连通图：如果在一个无向图中从每一个顶点到每个其他顶点都存在一条路径，则称该无向图是联通的，具有这样的有向图成为强连通图。</p><p><strong>图的基本操作：</strong></p><p>（1）创建一个图结构 CreateGraph(G)</p><p>（2）检索给定顶点 LocateVex(G,elem)</p><p>（3）获取图中某个顶点 GetVex(G,v)</p><p>（4）为图中顶点赋值 PutVex(G,v,value)</p><p>（5）返回第一个邻接点 FirstAdjVex(G,v)</p><p>（6）返回下一个邻接点 NextAdjVex(G,v,w)</p><p>（7）插入一个顶点 InsertVex(G,v)</p><p>（8）删除一个顶点 DeleteVex(G,v)</p><p>（9）插入一条边 InsertEdge(G,v,w)</p><p>（10）删除一条边 DeleteEdge(G,v,w)</p><p>（11）遍历图 Traverse(G,v)</p><p><strong>图的高级算法：</strong></p><p>1、 最小生成树（Prim和kruskal算法）</p><p>2、 单元路径最短（Dijkstra算法）</p><p>3、所有点对的最短路径（Floyd-Warshall算法）</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data struct </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP与HTTPS简介</title>
      <link href="/2020/03/22/HTTP%E4%B8%8EHTTPS/"/>
      <url>/2020/03/22/HTTP%E4%B8%8EHTTPS/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="HTTP-简介"><a href="#HTTP-简介" class="headerlink" title="HTTP 简介"></a>HTTP 简介</h1><p>HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于从万维网（WWW:World Wide Web ）服务器传输超文本到本地浏览器的传送协议。。</p><p>HTTP是一个基于TCP/IP通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。</p><h2 id="HTTP-工作原理"><a href="#HTTP-工作原理" class="headerlink" title="HTTP 工作原理"></a>HTTP 工作原理</h2><p>HTTP协议工作于客户端-服务端架构上。浏览器作为HTTP客户端通过URL向HTTP服务端即WEB服务器发送所有请求。</p><p>Web服务器有：Apache服务器，IIS服务器（Internet Information Services）等。</p><p>Web服务器根据接收到的请求后，向客户端发送响应信息。</p><p>HTTP默认端口号为80，但是你也可以改为8080或者其他端口。</p><h2 id="HTTP三点注意事项："><a href="#HTTP三点注意事项：" class="headerlink" title="HTTP三点注意事项："></a>HTTP三点注意事项：</h2><ul><li>HTTP是无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</li><li>HTTP是媒体独立的：这意味着，只要客户端和服务器知道如何处理的数据内容，任何类型的数据都可以通过HTTP发送。客户端以及服务器指定使用适合的MIME-type内容类型。</li><li>HTTP是无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。<br>以下图表展示了HTTP协议通信流程：</li></ul><p><a href="https://www.runoob.com/wp-content/uploads/2013/11/cgiarch.gif" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://www.runoob.com/wp-content/uploads/2013/11/cgiarch.gif" class="lazyload" title></a></p><h1 id="HTTPS-简介"><a href="#HTTPS-简介" class="headerlink" title="HTTPS 简介"></a>HTTPS 简介</h1><p>HTTPS：是以安全为目标的HTTP通道，简单讲是HTTP的安全版，即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。</p><p>HTTPS协议的主要作用可以分为两种：一种是建立一个信息安全通道，来保证数据传输的安全；另一种就是确认网站的真实性。</p><h2 id="HTTPS的工作原理"><a href="#HTTPS的工作原理" class="headerlink" title="HTTPS的工作原理"></a>HTTPS的工作原理</h2><p>我们都知道HTTPS能够加密信息，以免敏感信息被第三方获取，所以很多银行网站或电子邮箱等等安全级别较高的服务都会采用HTTPS协议。</p><p>客户端在使用HTTPS方式与Web服务器通信时有以下几个步骤，如图所示。</p><p>（1）客户使用https的URL访问Web服务器，要求与Web服务器建立SSL连接。</p><p>（2）Web服务器收到客户端请求后，会将网站的证书信息（证书中包含公钥）传送一份给客户端。</p><p>（3）客户端的浏览器与Web服务器开始协商SSL连接的安全等级，也就是信息加密的等级。</p><p>（4）客户端的浏览器根据双方同意的安全等级，建立会话密钥，然后利用网站的公钥将会话密钥加密，并传送给网站。</p><p>（5）Web服务器利用自己的私钥解密出会话密钥。</p><p>（6）Web服务器利用会话密钥加密与客户端之间的通信。</p><p><a href="https://www.sslzhengshu.com/upload/7/7e327e701ba6.jpg" data-fancybox="group" data-caption class="fancybox"><img alt data-src="https://www.sslzhengshu.com/upload/7/7e327e701ba6.jpg" class="lazyload" title></a></p><h2 id="HTTPS的优点"><a href="#HTTPS的优点" class="headerlink" title="HTTPS的优点"></a>HTTPS的优点</h2><p>尽管HTTPS并非绝对安全，掌握根证书的机构、掌握加密算法的组织同样可以进行中间人形式的攻击，但HTTPS仍是现行架构下最安全的解决方案，主要有以下几个好处：</p><p>（1）使用HTTPS协议可认证用户和服务器，确保数据发送到正确的客户机和服务器；</p><p>（2）HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，要比http协议安全，可防止数据在传输过程中不被窃取、改变，确保数据的完整性。</p><p>（3）HTTPS是现行架构下最安全的解决方案，虽然不是绝对安全，但它大幅增加了中间人攻击的成本。</p><p>（4）谷歌曾在2014年8月份调整搜索引擎算法，并称“比起同等HTTP网站，采用HTTPS加密的网站在搜索结果中的排名将会更高”。</p><h2 id="HTTP-与-HTTPS-的区别"><a href="#HTTP-与-HTTPS-的区别" class="headerlink" title="HTTP 与 HTTPS 的区别"></a>HTTP 与 HTTPS 的区别</h2><ul><li><p>HTTP 是明文传输，HTTPS 通过 SSL\TLS 进行了加密</p></li><li><p>HTTP 的端口号是 80，HTTPS 是 443</p></li><li><p>HTTPS 需要到 CA 申请证书，一般免费证书很少，需要交费</p></li><li><p>HTTPS 的连接很简单，是无状态的；HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，比 HTTP 协议安全</p></li></ul><h1 id="SSL介绍："><a href="#SSL介绍：" class="headerlink" title="SSL介绍："></a>SSL介绍：</h1><p>安全套接字（Secure Socket Layer，SSL）协议是Web浏览器与Web服务器之间安全交换信息的协议，提供两个基本的安全服务：鉴别与保密。</p><p>SSL是Netscape于1994年开发的，后来成为了世界上最著名的web安全机制，所有主要的浏览器都支持SSL协议。</p><p>目前有三个版本：2、3、3.1，最常用的是第3版，是1995年发布的。</p><p>在客户端与服务器间传输的数据是通过使用对称算法（如 DES 或 RC4）进行加密的。公用密钥算法（通常为 RSA）是用来获得加密密钥交换和数字签名的，此算法使用服务器的SSL数字证书中的公用密钥。有了服务器的SSL数字证书，客户端也可以验证服务器的身份。SSL 协议的版本 1 和 2 只提供服务器认证。版本 3 添加了客户端认证，此认证同时需要客户端和服务器的数字证书。</p><h2 id="SSL协议的三个特性"><a href="#SSL协议的三个特性" class="headerlink" title="SSL协议的三个特性"></a>SSL协议的三个特性</h2><p>① 保密：在握手协议中定义了会话密钥后，所有的消息都被加密。</p><p>② 鉴别：可选的客户端认证，和强制的服务器端认证。</p><p>③ 完整性：传送的消息包括消息完整性检查（使用MAC）。</p><p>SSL的位置</p><p>SSL介于应用层和TCP层之间。应用层数据不再直接传递给传输层，而是传递给SSL层，SSL层对从应用层收到的数据进行加密，并增加自己的SSL头。</p><h2 id="SSL的工作原理"><a href="#SSL的工作原理" class="headerlink" title="SSL的工作原理"></a>SSL的工作原理</h2><p>握手协议（Handshake protocol）</p><p>记录协议（Record protocol）</p><p>警报协议（Alert protocol）</p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP与HTTPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python</title>
      <link href="/2020/03/22/python/"/>
      <url>/2020/03/22/python/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="python第三方包国内镜像网址"><a href="#python第三方包国内镜像网址" class="headerlink" title="python第三方包国内镜像网址"></a>python第三方包国内镜像网址</h2><p>清华：<a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>阿里云：<a href="http://mirrors.aliyun.com/pypi/simple/" target="_blank" rel="noopener">http://mirrors.aliyun.com/pypi/simple/</a></p><p>中国科技大学 <a href="https://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.mirrors.ustc.edu.cn/simple/</a> (比较好用)</p><p>华中理工大学：<a href="http://pypi.hustunique.com/" target="_blank" rel="noopener">http://pypi.hustunique.com/</a></p><p>山东理工大学：<a href="http://pypi.sdutlinux.org/" target="_blank" rel="noopener">http://pypi.sdutlinux.org/</a></p><p>豆瓣：<a href="http://pypi.douban.com/simple/" target="_blank" rel="noopener">http://pypi.douban.com/simple/</a></p><h3 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h3><p>可以在使用pip的时候加参数-i <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a><br>例如：pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a> pyspider，这样就会从清华这边的镜像去安装pyspider库。</p><h3 id="永久使用"><a href="#永久使用" class="headerlink" title="永久使用"></a>永久使用</h3><p>Linux下，修改 ~/.pip/pip.conf (没有就创建一个文件夹及文件。文件夹要加“.”，表示是隐藏文件夹)<br>windows下，直接在user目录中创建一个pip目录，再新建文件pip.ini。（例如：C:\Users\WQP\pip\pip.ini）内容同上</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/03/13/hello-world/"/>
      <url>/2020/03/13/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hello Word </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
