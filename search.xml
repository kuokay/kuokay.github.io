<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>google开发者工具使用教程</title>
      <link href="/2020/04/06/google/"/>
      <url>/2020/04/06/google/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Google Chrome是一款由Google公司开发的网页浏览器，该浏览器基于其他开源软件撰写，包括WebKit，目标是提升稳定性、速度和安全性，并创造出简单且有效率的使用者界面。</p><h1 id="一-如何调出开发者工具"><a href="#一-如何调出开发者工具" class="headerlink" title="一.如何调出开发者工具"></a>一.如何调出开发者工具</h1><ul><li><p>使用F12打开开发者工具</p></li><li><p>在页面上右键–》检查，打开开发者工具。</p></li><li><p>在浏览器有上角左键单击–》更多工具–》开发者工具（快捷键Ctrl+shift+I）<br><a href="https://i.loli.net/2020/04/06/cbZx7CiFOuz4e9M.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" title="1.png" data-src="https://i.loli.net/2020/04/06/cbZx7CiFOuz4e9M.png" class="lazyload"></a></p></li></ul><p><a href="https://i.loli.net/2020/04/06/1XazNIdZpgCMuYs.png" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" title="2.png" data-src="https://i.loli.net/2020/04/06/1XazNIdZpgCMuYs.png" class="lazyload"></a></p><h1 id="二-开发者工具初步介绍"><a href="#二-开发者工具初步介绍" class="headerlink" title="二.开发者工具初步介绍"></a>二.开发者工具初步介绍</h1><p>chrome开发者工具最常用的四个功能模块：元素（ELements）、控制台（Console）、源代码（Sources），网络（Network）。</p><ul><li><p>元素（Elements）：用于查看或修改HTML元素的属性、CSS属性、监听事件、断点等。css可以即时修改，即时显示。大大方便了开发者调试页面</p></li><li><p>控制台（Console）：控制台一般用于执行一次性代码，查看JavaScript对象，查看调试日志信息或异常信息。还可以当作Javascript API查看用。例如我想查看console都有哪些方法和属性，我可以直接在Console中输入”console”并执行~</p></li><li><p>源代码（Sources）：该页面用于查看页面的HTML文件源代码、JavaScript源代码、CSS源代码，此外最重要的是可以调试JavaScript源代码，可以给JS代码添加断点等。</p></li><li><p>网络（Network）：网络页面主要用于查看header等与网络连接相关的信息。</p><h2 id="Elements面板"><a href="#Elements面板" class="headerlink" title="Elements面板"></a>Elements面板</h2><p>这个就是查看、编辑页面上的元素，包括HTML和CSS：<br><a href="https://i.loli.net/2020/04/06/7MA1NWPitKTovyY.png" data-fancybox="group" data-caption="3.png" class="fancybox"><img alt="3.png" title="3.png" data-src="https://i.loli.net/2020/04/06/7MA1NWPitKTovyY.png" class="lazyload"></a></p></li></ul><p>左侧就是对页面HTML结构的查看与编辑，你可以直接在某个元素上双击修改元素的属性，或者你点右键选”Edit as Html”直接对元素的HTML进行编辑，或者删除某个元素，所有的修改都会即时在页面上得到呈现。（注：看到上面右键菜单的最后一个选项”审查元素”了么？这是不是说明这个开发者工具的页面也是HTML来的呢？你点一下就知道了哦，嘿嘿）<br>你还可以对某个元素进行监听，在JS对元素的属性或者HTML进行修改的时候，直接触发断点，跳转到对改元素进行修改的JS代码处：</p><p>Elements标签页的右侧可以对元素的CSS进行查看与编辑修改：</p><p>你还可以通过这里看到各CSS选择器设置的CSS值的覆盖情况。<br>下面的Metrics可以看到元素占的空间情况（宽、高、Padding、Margin神马的）：</p><p><a href="https://i.loli.net/2020/04/06/z4t1k5pCIiERWHf.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" title="1.png" data-src="https://i.loli.net/2020/04/06/z4t1k5pCIiERWHf.png" class="lazyload"></a></p><p>注意到上面的Properties没有？这个很有用哦，可以让你看到元素具有的方法与属性，比查API手册要方便得多哦（要注意某些方法和属性在IE、FireFox等其他浏览器下面的支持情况哦）。</p><h2 id="Console面板"><a href="#Console面板" class="headerlink" title="Console面板"></a>Console面板</h2><p>就是Javascript控制台了：<br><a href="https://i.loli.net/2020/04/06/osWixav18NGQRD9.png" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" title="2.png" data-src="https://i.loli.net/2020/04/06/osWixav18NGQRD9.png" class="lazyload"></a></p><p>这个除了查看错误信息、打印调试信息（console.log()）、写一些测试脚本以外，还可以当作Javascript API查看用。<br>例如我想查看console都有哪些方法和属性，我可以直接在Console中输入”console”并执行：<br>目前控制台方法和属性有：<br>[“$$”, “$x”, “dir”, “dirxml”, “keys”, “values”, “profile”, “profileEnd”, “monitorEvents”, “unmonitorEvents”, “inspect”, “copy”, “clear”, “getEventListeners”, “undebug”, “monitor”, “unmonitor”, “table”, “$0”, “$1”, “$2”, “$3”, “$4”, “$_”]<br>一般情况下我们用来输入信息的方法主要是用到如下四个</p><ul><li>console.log 用于输出普通信息</li><li>console.info 用于输出提示性信息</li><li>console.error用于输出错误信息</li><li>console.warn用于输出警示信息</li><li>console.debug用于输出调试信息</li></ul><h2 id="Resources面板"><a href="#Resources面板" class="headerlink" title="Resources面板"></a>Resources面板</h2><p><a href="https://i.loli.net/2020/04/06/DUMXfmanEF9WbVP.png" data-fancybox="group" data-caption="3.png" class="fancybox"><img alt="3.png" title="3.png" data-src="https://i.loli.net/2020/04/06/DUMXfmanEF9WbVP.png" class="lazyload"></a></p><p>Resources标签页可以查看到请求的资源情况，包括CSS、JS、图片等的内容，同时还可以查看到存储相关的如Cookies、HTML5的Database和LocalStore等，你可以对存储的内容编辑和删除。<br>这里的CSS文件有一个好玩的特性，你可以直接修改CSS文件，并且修改即时生效哦：</p><p>添加断点：在源代码左边有行号，点击对应行的行号，就好给改行添加上一个断点（再次点击可删除断点）。右键点击断点，在弹出的菜单中选择Edit breakpoint可以给该断的添加中断条件。</p><p>中断调试：添加断点后，当JS代码运行到断点时会中断（对于添加了中断条件的断点在符合条件时中断），此时可以将光标放在变量上查看变量的</p><h2 id="Network面板"><a href="#Network面板" class="headerlink" title="Network面板"></a>Network面板</h2><p><a href="https://i.loli.net/2020/04/06/FGjEyqUrNgw2sBX.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" title="1.png" data-src="https://i.loli.net/2020/04/06/FGjEyqUrNgw2sBX.png" class="lazyload"></a></p><p>Network标签页对于分析网站请求的网络情况、查看某一请求的请求头和响应头还有响应内容很有用，特别是在查看Ajax类请求的时候，非常有帮助。注意是在你打开Chrome开发者工具后发起的请求，才会在这里显示的哦。<br>点击左侧某一个具体去请求URL，可以看到该请求的详细HTTP请求情况：<br><a href="https://i.loli.net/2020/04/06/ZDzY2QpVEW4cykM.png" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" title="2.png" data-src="https://i.loli.net/2020/04/06/ZDzY2QpVEW4cykM.png" class="lazyload"></a></p><p>我们可以在这里看到HTTP请求头、HTTP响应头、HTTP返回的内容等信息，对于开发、调试，都是很有用的。</p><h3 id="请求文件具体说明"><a href="#请求文件具体说明" class="headerlink" title="请求文件具体说明"></a>请求文件具体说明</h3><ul><li><p>Headers<br>Header面板列出资源的请求url、HTTP方法、响应状态码、请求头和响应头及它们各自的值、请求参数等等<br><a href="https://i.loli.net/2020/04/06/a7quxNPyUjYGiVl.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" title="1.png" data-src="https://i.loli.net/2020/04/06/a7quxNPyUjYGiVl.png" class="lazyload"></a></p></li><li><p>Preview：预览面板，用于资源的预览<br><a href="https://i.loli.net/2020/04/06/eqzrWInLmcGBVDK.png" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" title="2.png" data-src="https://i.loli.net/2020/04/06/eqzrWInLmcGBVDK.png" class="lazyload"></a></p></li><li><p>Response：响应信息面板包含资源还未进行格式处理的内容<br><a href="https://i.loli.net/2020/04/06/KNmepAYX14kxVIQ.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" title="1.png" data-src="https://i.loli.net/2020/04/06/KNmepAYX14kxVIQ.png" class="lazyload"></a></p></li><li><p>Timing：资源请求的详细信息花费时间<br><a href="https://i.loli.net/2020/04/06/5wvdpWZXzIc8Pai.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" title="1.png" data-src="https://i.loli.net/2020/04/06/5wvdpWZXzIc8Pai.png" class="lazyload"></a></p><h2 id="performance面板"><a href="#performance面板" class="headerlink" title="performance面板"></a>performance面板</h2><p><a href="https://i.loli.net/2020/04/06/kBhFzR7wAWP98GJ.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" title="1.png" data-src="https://i.loli.net/2020/04/06/kBhFzR7wAWP98GJ.png" class="lazyload"></a><br>1、操作区域：包含录制，刷新页面分析，清除结果等一系列操作</p></li><li><p>开始录制按钮(window下快捷键ctrl+E)</p></li><li><p>重新录制按钮</p></li><li><p>清空录制信息</p></li><li><p>打开本地录制文件</p></li><li><p>保存当前录制数据</p></li><li><p>多个录屏的切换</p></li><li><p>是否屏幕快照（勾选了，总览图中会有一系列的屏幕快照，位置在Net和HEAP之间；反之，不会显示屏幕快照）</p></li><li><p>是否显示内存（勾选了，总览图中的屏幕快照下面有一个Heap，就是我们通俗所说的内存）</p></li><li><p>垃圾回收</p></li><li><p>禁止脚本样本（勾选了，在详情区域的Main区域不会显示js事件的调用 ；反之会的。这里可以通过两个录制来看一下【禁止时候的火焰图明显低一些】）</p></li><li><p>调整网络状态（模拟一些网络不好的状况）</p></li><li><p>是否开启加速渲染（默认不用勾选，这个不具体展开）</p></li><li><p>cpu性能设置（可以调整4xslowdown来模拟手机运行）</p></li></ul><p>2、overview总览图：高度概括随时间线的变动，包括FPS，CPU，NET</p><ul><li>FPS。每秒帧数。绿色竖线越高，FPS 越高。 FPS 图表上的红色块表示长时间帧，很可能会出现卡顿</li><li>CPU。 CPU 资源。此面积图指示消耗 CPU 资源的事件类型，不同颜色代表不同资源<br>【蓝色(Loading)：网络通信和HTML解析<br>黄色(Scripting)：JavaScript执行<br>紫色(Rendering)：样式计算和布局，即重排<br>绿色(Painting)：重绘<br>灰色(other)：其它事件花费的时间<br>白色(Idle)：空闲时间）<br>】</li><li>NET。有两条蓝色的长条，深蓝代表优先级比较高的请求，浅蓝代表优先级比较低的请求</li><li>屏幕快照。可以把鼠标放到总览图区域会有一个屏幕快照的弹框图</li><li>HEAP。这就是通常说的内存</li></ul><p>3、详情区域：从不同的角度分析框选区域 。例如：Network，Frames, Interactions, Main等</p><ul><li><p>详情区域主要包括两个部分：上半部分（内存情况）和下半部分（选中的时间段的是事件相关信息统计）<br>4、总结区域：精确到毫秒级的分析，以及按调用层级，事件分类的整理</p></li><li><p>内存情况：<br>JS Heap:js堆<br>Documents:文档数<br>Nodes:DOM 节点数<br>Listeners:监听数<br>GPU Memory:GPU内存</p></li><li><p>总结情况<br>summary:按照网页显示的整个过程，统计每个阶段花费的时间【loading/scripting/rendering/painting/other/idle】<br>Bottom-Up:按照事件花费的时间长短来排序的<br>Call Tree:按照调用顺序来排序的【从根调用事件到当前选中事件】<br>Event Log：按照事件发生的先后顺序排序，显示的事件的详细信息</p><h2 id="Memory面板简介"><a href="#Memory面板简介" class="headerlink" title="Memory面板简介"></a>Memory面板简介</h2><p>如果想要看更多的内存信息快照，则需要打开 Chrome 浏览器的开发者工具中的 Memory 面板了，下面就简单介绍一下该面板的使用。<br>它大概是长这样：<br><a href="https://i.loli.net/2020/04/06/gMup2CUaZQPe3nv.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" title="1.png" data-src="https://i.loli.net/2020/04/06/gMup2CUaZQPe3nv.png" class="lazyload"></a><br>上面有三个按钮：</p></li><li><p>Heap snapshot - 用以打印堆快照，堆快照文件显示页面的 javascript 对象和相关 DOM 节点之间的内存分配</p></li><li><p>Allocation instrumentation on timeline - 在时间轴上记录内存信息，随着时间变化记录内存信息。</p></li><li><p>Allocation sampling - 内存信息采样，使用采样的方法记录内存分配。此配置文件类型具有最小的性能开销，可用于长时间运行的操作。它提供了由 javascript 执行堆栈细分的良好近似值分配。</p><h2 id="Application面板简介"><a href="#Application面板简介" class="headerlink" title="Application面板简介"></a>Application面板简介</h2><p>该面板主要是记录网站加载的所有资源信息，包括存储数据（Local Storage、Session Storage、IndexedDB、Web SQL、Cookies）、缓存数据、字体、图片、脚本、样式表等。</p></li></ul><p>这个面板跟前前面几道硬菜（Network面板、Timeline面板、Profiles面板）比起来简单多了，这里就稍微作一下介绍：</p><ul><li>Local Storage 如果你在开发过程中使用了local storage来存储键值对(KVPs)，那么你就可以通过Local Storage窗格来检查、新增、修改、删除这个键值对。</li><li>Application Cache 你可以使用Application Cache窗格去查看通过Application Cache API创建的资源。</li><li>Frames 将页面上的资源按frame类别进行组织显示</li></ul><h2 id="Security面板简介"><a href="#Security面板简介" class="headerlink" title="Security面板简介"></a>Security面板简介</h2><p>HTTPS（Hyper Text Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。 它是一个URI scheme（抽象标识符体系），句法类同http:体系。用于安全的HTTP数据传输。https:URL表明它使用了HTTP，但HTTPS存在不同于HTTP的默认端口及一个加密/身份验证层（在HTTP与TCP之间）。</p><h3 id="HTTPS和HTTP的区别主要为以下四点："><a href="#HTTPS和HTTP的区别主要为以下四点：" class="headerlink" title="HTTPS和HTTP的区别主要为以下四点："></a>HTTPS和HTTP的区别主要为以下四点：</h3><p>① https协议需要到CA申请证书，一般免费证书很少，需要交费。<br>② http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议。<br>③ http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。<br>④ http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。</p><p>如果网页是安全的，则会显示这样一条消息：This page is secure (valid HTTPS).。</p><p>通过点击View certificate可以查看main origin的服务器证书信息。<br>点击左侧可以查看指定源的连接和证书详情。</p><p>如果网页是不安全的，则会显示：This page is not secure.。</p><p>该面板可以区分两种类型的不安全的页面：</p><p>如果被请求的页面通过HTTP提供服务，那么这个主源就会被标记为不安全。<br>如果被请求的页面是通过HTTPS获取的，但这个页面接着通过HTTP继续从其他来源检索内容，那么这个页面仍然被标记为不安全。这就是所谓的混合内容页面,混合内容页面只是部分受到保护,因为HTTP内容(非加密的内容)可以被嗅探者入侵,容易受到中间人攻击。</p><h2 id="Audits面板简介"><a href="#Audits面板简介" class="headerlink" title="Audits面板简介"></a>Audits面板简介</h2><p>这个对于优化前端页面、加速网页加载速度很有用哦（相当与Yslow）：</p><p>点击run按钮，就可以开始分析页面，分析完了就可以看到分析结果了：</p><p>它甚至可以分析出页面上样式表中有哪些CSS是没有被使用的哦：</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> google </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用网站及工具</title>
      <link href="/2020/04/06/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99%E5%8F%8A%E5%B7%A5%E5%85%B7/"/>
      <url>/2020/04/06/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99%E5%8F%8A%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="牛逼哄哄的聚合型网站，各类神器云聚之地！"><a href="#牛逼哄哄的聚合型网站，各类神器云聚之地！" class="headerlink" title=" 牛逼哄哄的聚合型网站，各类神器云聚之地！ "></a> 牛逼哄哄的聚合型网站，各类神器云聚之地！ </h2><h2 id="炫猿导航"><a href="#炫猿导航" class="headerlink" title="炫猿导航"></a>炫猿导航</h2><p>官网: <a href="https://xydh.fun/" target="_blank" rel="noopener">https://xydh.fun/</a></p><p>入眼即是12大板块的资源分类得井然有序，开发者也是非常细致地搜集进一些优质软件和网站、云网盘、电影、音乐、图书、学习、生活等类资源，大致估摸着有100多款的工具利器，功能强大。<br><a href="https://i.loli.net/2020/04/15/PUJ9MynZ2FXabiD.png" data-fancybox="group" data-caption="11.png" class="fancybox"><img alt="11.png" title="11.png" data-src="https://i.loli.net/2020/04/15/PUJ9MynZ2FXabiD.png" class="lazyload"></a><br>这里有一个合作的同类网站，也是提供各类资源的一个优质聚合网。<br><a href="https://i.loli.net/2020/04/15/aCEsZmpb9kMthHq.png" data-fancybox="group" data-caption="22.png" class="fancybox"><img alt="22.png" title="22.png" data-src="https://i.loli.net/2020/04/15/aCEsZmpb9kMthHq.png" class="lazyload"></a></p><hr><h2 id="轻松玩转PDF"><a href="#轻松玩转PDF" class="headerlink" title="轻松玩转PDF"></a>轻松玩转PDF</h2><p>官网: <a href="https://smallpdf.com/cn" target="_blank" rel="noopener">https://smallpdf.com/cn</a></p><p>功能一应俱全、简单好用的线上 PDF 工具<br><a href="https://i.loli.net/2020/04/15/yiQcNPhLsnOUbzC.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" title="1.png" data-src="https://i.loli.net/2020/04/15/yiQcNPhLsnOUbzC.png" class="lazyload"></a></p><hr><h2 id="在线文件转换"><a href="#在线文件转换" class="headerlink" title="在线文件转换"></a>在线文件转换</h2><p>官网: <a href="https://convertio.co/zh/" target="_blank" rel="noopener">https://convertio.co/zh/</a></p><p>将您的文件转换成任意格式<br><a href="https://i.loli.net/2020/04/15/x7FkYgbE1piADQ8.png" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" title="2.png" data-src="https://i.loli.net/2020/04/15/x7FkYgbE1piADQ8.png" class="lazyload"></a></p><hr><h2 id="ppt模板"><a href="#ppt模板" class="headerlink" title="ppt模板"></a>ppt模板</h2><ol><li><p>51ppt官网:  <a href="http://www.51pptmoban.com/pptzhuanti.html" target="_blank" rel="noopener">http://www.51pptmoban.com/pptzhuanti.html</a></p></li><li><p>第1ppt官网: <a href="http://www.1ppt.com/" target="_blank" rel="noopener">http://www.1ppt.com/</a></p></li><li><p>优品ppt<a href="http://www.ypppt.com/" target="_blank" rel="noopener">http://www.ypppt.com/</a></p></li></ol><p>免费ppt模板大全<br><a href="https://i.loli.net/2020/04/15/Xu7O1SLthgsW3br.png" data-fancybox="group" data-caption="1.png" class="fancybox"><img alt="1.png" title="1.png" data-src="https://i.loli.net/2020/04/15/Xu7O1SLthgsW3br.png" class="lazyload"></a></p><hr><h2 id="非常全的外刊网站-MagazineLib"><a href="#非常全的外刊网站-MagazineLib" class="headerlink" title="非常全的外刊网站-MagazineLib"></a>非常全的外刊网站-MagazineLib</h2><p>官网: <a href="https://magazinelib.com/" target="_blank" rel="noopener">https://magazinelib.com/</a></p><p>非常全的外刊网站，基本上想看的外刊都有(可下载）<br><a href="https://pic1.zhimg.com/80/v2-5f39d9a6f9b8338b682f3239c172e26f_720w.jpg" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" title="2.png" data-src="https://pic1.zhimg.com/80/v2-5f39d9a6f9b8338b682f3239c172e26f_720w.jpg" class="lazyload"></a></p><hr><h2 id="万花筒"><a href="#万花筒" class="headerlink" title="万花筒"></a>万花筒</h2><p>官网: <a href="https://wht.im/" target="_blank" rel="noopener">https://wht.im/</a></p><p>一个极简的网址导航，聚合了多种搜索引擎，也收录了各种常用的网站。分类合，内容齐全。<br><a href="https://pic2.zhimg.com/80/v2-bebebdae7a580ee0e276cc22b8ace9ea_720w.jpg" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" title="2.png" data-src="https://pic2.zhimg.com/80/v2-bebebdae7a580ee0e276cc22b8ace9ea_720w.jpg" class="lazyload"></a></p><hr><h2 id="音乐下载"><a href="#音乐下载" class="headerlink" title="音乐下载"></a>音乐下载</h2><p>官网1: <a href="http://www.gequdaquan.net/gqss/" target="_blank" rel="noopener">http://www.gequdaquan.net/gqss/</a></p><p>官网2: <a href="http://www.musictool.top/" target="_blank" rel="noopener">http://www.musictool.top/</a></p><p>音乐大全<br><a href="https://pic3.zhimg.com/80/v2-02a41380258fb5c654bd7e06424799e7_720w.jpg" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" title="2.png" data-src="https://pic3.zhimg.com/80/v2-02a41380258fb5c654bd7e06424799e7_720w.jpg" class="lazyload"></a></p><hr><h2 id="搜索工具"><a href="#搜索工具" class="headerlink" title="搜索工具"></a>搜索工具</h2><p>官网1: <a href="https://bigezhang.com/so" target="_blank" rel="noopener">https://bigezhang.com/so</a></p><p>官网2: <a href="https://search.chongbuluo.com/" target="_blank" rel="noopener">https://search.chongbuluo.com/</a></p><p>一个极简的网址导航，聚合了多种搜索引擎，也收录了各种常用的网站。分类合，内容齐全。<br><a href="https://pic3.zhimg.com/80/v2-34eb46c393b7d7a6df22fff74319cffb_720w.jpg" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" title="2.png" data-src="https://pic3.zhimg.com/80/v2-34eb46c393b7d7a6df22fff74319cffb_720w.jpg" class="lazyload"></a></p><hr><h2 id="影视大全"><a href="#影视大全" class="headerlink" title="影视大全"></a>影视大全</h2><ol><li><p>电影天堂: <a href="http://t.cn/R0HK0BP" target="_blank" rel="noopener">http://t.cn/R0HK0BP</a></p></li><li><p>疯狂影视搜索 : <a href="http://t.cn/RXnQLYO" target="_blank" rel="noopener"> http://t.cn/RXnQLYO</a></p></li><li><p>优质电影网  : <a href="http://t.cn/RLGSHq6" target="_blank" rel="noopener">http://t.cn/RLGSHq6</a></p></li><li><p>美剧  : <a href="http://www.6vhao.tv/mj/" target="_blank" rel="noopener">http://www.6vhao.tv/mj/</a></p></li></ol><p><a href="http://www.youzhidy.com/uploads/allimg/200209/1-2002091340291Z.jpg" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" title="2.png" data-src="http://www.youzhidy.com/uploads/allimg/200209/1-2002091340291Z.jpg" class="lazyload"></a></p><hr><h2 id="数据-类网站"><a href="#数据-类网站" class="headerlink" title="数据 类网站"></a>数据 类网站</h2><ol><li><p>艾瑞咨询: <a href="https://www.iresearch.com.cn/" target="_blank" rel="noopener">https://www.iresearch.com.cn/</a></p></li><li><p>腾讯大数据 : <a href="https://data.qq.com/" target="_blank" rel="noopener"> https://data.qq.com/</a></p></li><li><p>新榜 : <a href="https://www.newrank.cn/" target="_blank" rel="noopener">https://www.newrank.cn/</a></p></li></ol><p><a href="https://pic2.zhimg.com/80/v2-3793d3ca3a5cf11907d707291da76c18_720w.jpg" data-fancybox="group" data-caption="2.png" class="fancybox"><img alt="2.png" title="2.png" data-src="https://pic2.zhimg.com/80/v2-3793d3ca3a5cf11907d707291da76c18_720w.jpg" class="lazyload"></a></p><hr><h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><ol><li><p>吾爱破解: <a href="https://www.52pojie.cn/" target="_blank" rel="noopener">https://www.52pojie.cn/</a></p></li><li><p>GO破解 : <a href="https://www.gopojie.net/" target="_blank" rel="noopener">https://www.gopojie.net/</a></p></li><li><p>ZD423: <a href="https://m.zdfans.com//" target="_blank" rel="noopener">https://m.zdfans.com/</a></p></li><li><p>软件缘: <a href="https://www.appcgn.com/" target="_blank" rel="noopener">https://www.appcgn.com/</a></p></li><li><p>爱软客 : <a href="http://www.bokeboke.net/" target="_blank" rel="noopener">http://www.bokeboke.net/</a></p></li><li><p>分享者: <a href="http://www.sharerw.com/" target="_blank" rel="noopener">http://www.sharerw.com/</a></p></li></ol><hr><ul><li>好用网站<a href="https://www.zhihu.com/question/311420011" target="_blank" rel="noopener">https://www.zhihu.com/question/311420011</a></li></ul><ul><li><p>好用网站<a href="https://www.zhihu.com/question/345910983" target="_blank" rel="noopener">https://www.zhihu.com/question/345910983</a></p></li><li><p>好用网站<a href="https://zhuanlan.zhihu.com/p/91748529" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/91748529</a></p></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实用网站及工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用的数据结构：数组，栈，链表，队列，树，图，堆，散列表</title>
      <link href="/2020/04/05/data%20struct/"/>
      <url>/2020/04/05/data%20struct/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>常用的数据结构有：数组，栈，链表，队列，树，图，堆，散列表等。</p><p>每一种数据结构都有着独特的数据存储方式，下面为大家介绍它们的结构和优缺点。<br><a href="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2342770679,2195164754&fm=26&gp=0.jpg" data-fancybox="group" data-caption="3.jpeg" class="fancybox"><img alt="3.jpeg" title="3.jpeg" data-src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2342770679,2195164754&fm=26&gp=0.jpg" class="lazyload"></a></p><h1 id="1、数组"><a href="#1、数组" class="headerlink" title="1、数组"></a>1、数组</h1><h2 id><a href="#" class="headerlink" title></a><a href="https://i.loli.net/2020/04/05/f24nrTsY6VU1kKy.jpg" data-fancybox="group" data-caption="3.jpeg" class="fancybox"><img alt="3.jpeg" title="3.jpeg" data-src="https://i.loli.net/2020/04/05/f24nrTsY6VU1kKy.jpg" class="lazyload"></a></h2><p>数组是可以再内存中连续存储多个元素的结构，在内存中的分配也是连续的，数组中的元素通过数组下标进行访问，数组下标从0开始。例如下面这段代码就是将数组的第一个元素赋值为 1。</p><p>arr是数组的名字,后面的” [] “表示哪一个数据,这里面的数字叫做数组下标,或者叫索引,下标是从0开始计数,比如想要查询小红的话则是” arr[1] “,<br>数组的数据是按照顺序存储在内存中连续的空间,所以内存中的每个数据都可以通过下标来取得,这样就可以直接进行访问数据,如果我们使用链表的话,那么就需要指针一个个去查询数据,数组可以直接访问,这样查询效率就会大大提升,但是想要在任意未知去添加数据和删除数据的话,那么数组的操作就比链表难多了,如果我们想把” 小王 “加入到小明的后面,也就是 arr[1] 的位置,首先数组的末尾需要有足够的空间,(java中数组的长度一但初始化就不可改变,所以要保证有足够的空间来存放想要添加的数据),如果已经有空间,那么我们需要将小黑向后移动一位,然后小红向后移动一位,当arr[1] 的空间空出来的时候,才能把小王添加进去,这样的话数组的添加操作才能完成,相反如果想要删除掉小王的话,那么就需要删除目标的数据,也就是arr[1]的位置,然后把后面的数据往前移动,最后删除掉多余的空间即可.<br>数组的查询数据的时间复杂度为O(1),删除和添加则为O(n),正好和链表相反</p><h2 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h2><h3 id="1、按照索引查询元素快"><a href="#1、按照索引查询元素快" class="headerlink" title="1、按照索引查询元素快"></a>1、按照索引查询元素快</h3><h3 id="2、按照索引遍历数组方便"><a href="#2、按照索引遍历数组方便" class="headerlink" title="2、按照索引遍历数组方便"></a>2、按照索引遍历数组方便</h3><h2 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h2><h3 id="1、数组的大小固定后就无法扩容了"><a href="#1、数组的大小固定后就无法扩容了" class="headerlink" title="1、数组的大小固定后就无法扩容了"></a>1、数组的大小固定后就无法扩容了</h3><h3 id="2、数组只能存储一种类型的数据"><a href="#2、数组只能存储一种类型的数据" class="headerlink" title="2、数组只能存储一种类型的数据"></a>2、数组只能存储一种类型的数据</h3><h3 id="3、添加，删除的操作慢，因为要移动其他的元素。"><a href="#3、添加，删除的操作慢，因为要移动其他的元素。" class="headerlink" title="3、添加，删除的操作慢，因为要移动其他的元素。"></a>3、添加，删除的操作慢，因为要移动其他的元素。</h3><p>适用场景：<br>频繁查询，对存储空间要求不大，很少增加和删除的情况。<br>#2、栈<br><a href="https://i.loli.net/2020/04/05/Ou7xtFkvKmTPQA4.jpg" data-fancybox="group" data-caption="2.jpeg" class="fancybox"><img alt="2.jpeg" title="2.jpeg" data-src="https://i.loli.net/2020/04/05/Ou7xtFkvKmTPQA4.jpg" class="lazyload"></a></p><hr><p>栈是一种特殊的线性表，仅能在线性表的一端操作，栈顶允许操作，栈底不允许操作。 栈的特点是：先进后出，或者说是后进先出，从栈顶放入元素的操作叫入栈，取出元素叫出栈。</p><p>栈的结构就像一个集装箱，越先放进去的东西越晚才能拿出来，所以，栈常应用于实现递归功能方面的场景，例如斐波那契数列。</p><h1 id="3、队列"><a href="#3、队列" class="headerlink" title="3、队列"></a>3、队列</h1><h2 id="-1"><a href="#-1" class="headerlink" title></a><a href="https://i.loli.net/2020/04/05/zKjpIbo38k4TH7J.jpg" data-fancybox="group" data-caption="4.jpeg" class="fancybox"><img alt="4.jpeg" title="4.jpeg" data-src="https://i.loli.net/2020/04/05/zKjpIbo38k4TH7J.jpg" class="lazyload"></a></h2><p>队列与栈一样，也是一种线性表，不同的是，队列可以在一端添加元素，在另一端取出元素，也就是：先进先出。从一端放入元素的操作称为入队，取出元素为出队，示例图如下：</p><p>使用场景：因为队列先进先出的特点，在多线程阻塞队列管理中非常适用。</p><h1 id="4、链表"><a href="#4、链表" class="headerlink" title="4、链表"></a>4、链表</h1><h2 id="-2"><a href="#-2" class="headerlink" title></a><a href="https://i.loli.net/2020/04/05/6kCJLnxbsdASDPK.jpg" data-fancybox="group" data-caption="5.jpeg" class="fancybox"><img alt="5.jpeg" title="5.jpeg" data-src="https://i.loli.net/2020/04/05/6kCJLnxbsdASDPK.jpg" class="lazyload"></a></h2><p>链表是物理存储单元上非连续的、非顺序的存储结构，数据元素的逻辑顺序是通过链表的指针地址实现，每个元素包含两个结点，一个是存储元素的数据域 (内存空间)，另一个是指向下一个结点地址的指针域。根据指针的指向，链表能形成不同的结构，例如单链表，双向链表，循环链表等。</p><h2 id="优点：-1"><a href="#优点：-1" class="headerlink" title="优点："></a>优点：</h2><h3 id="1、链表是很常用的一种数据结构，不需要初始化容量，可以任意加减元素；"><a href="#1、链表是很常用的一种数据结构，不需要初始化容量，可以任意加减元素；" class="headerlink" title="1、链表是很常用的一种数据结构，不需要初始化容量，可以任意加减元素；"></a>1、链表是很常用的一种数据结构，不需要初始化容量，可以任意加减元素；</h3><h3 id="2、添加或者删除元素时只需要改变前后两个元素结点的指针域指向地址即可，所以添加，删除很快；"><a href="#2、添加或者删除元素时只需要改变前后两个元素结点的指针域指向地址即可，所以添加，删除很快；" class="headerlink" title="2、添加或者删除元素时只需要改变前后两个元素结点的指针域指向地址即可，所以添加，删除很快；"></a>2、添加或者删除元素时只需要改变前后两个元素结点的指针域指向地址即可，所以添加，删除很快；</h3><h2 id="缺点：-1"><a href="#缺点：-1" class="headerlink" title="缺点："></a>缺点：</h2><h3 id="1、因为含有大量的指针域，占用空间较大；"><a href="#1、因为含有大量的指针域，占用空间较大；" class="headerlink" title="1、因为含有大量的指针域，占用空间较大；"></a>1、因为含有大量的指针域，占用空间较大；</h3><h3 id="2、查找元素需要遍历链表来查找，非常耗时。"><a href="#2、查找元素需要遍历链表来查找，非常耗时。" class="headerlink" title="2、查找元素需要遍历链表来查找，非常耗时。"></a>2、查找元素需要遍历链表来查找，非常耗时。</h3><p>适用场景：<br>数据量较小，需要频繁增加，删除操作的场景</p><h1 id="5、树"><a href="#5、树" class="headerlink" title="5、树"></a>5、树</h1><h2 id="-3"><a href="#-3" class="headerlink" title></a><a href="https://i.loli.net/2020/04/05/5iFQp2zevNMjoqy.jpg" data-fancybox="group" data-caption="6.jpeg" class="fancybox"><img alt="6.jpeg" title="6.jpeg" data-src="https://i.loli.net/2020/04/05/5iFQp2zevNMjoqy.jpg" class="lazyload"></a></h2><p>树是一种数据结构，它是由n（n&gt;=1）个有限节点组成一个具有层次关系的集合。把它叫做 “树” 是因为它看起来像一棵倒挂的树，也就是说它是根朝上，而叶朝下的。它具有以下的特点：</p><p>1、每个节点有零个或多个子节点；</p><p>2、没有父节点的节点称为根节点；</p><p>3、每一个非根节点有且只有一个父节点；</p><p>4、除了根节点外，每个子节点可以分为多个不相交的子树；</p><p>在日常的应用中，我们讨论和用的更多的是树的其中一种结构，就是二叉树。<br>二叉树是树的特殊一种，具有如下特点：</p><p>1、每个结点最多有两颗子树，结点的度最大为2。</p><p>2、左子树和右子树是有顺序的，次序不能颠倒。</p><p>3、即使某结点只有一个子树，也要区分左右子树。</p><p>二叉树是一种比较有用的折中方案，它添加，删除元素都很快，并且在查找方面也有很多的算法优化，所以，二叉树既有链表的好处，也有数组的好处，是两者的优化方案，在处理大批量的动态数据方面非常有用。</p><h3 id="扩展：-二叉树有很多扩展的数据结构，包括平衡二叉树、红黑树、B-树等，这些数据结构二叉树的基础上衍生了很多的功能，在实际应用中广泛用到，例如mysql的数据库索引结构用的就是B-树，还有HashMap的底层源码中用到了红黑树。这些二叉树的功能强大，但算法上比较复杂，想学习的话还是需要花时间去深入的。"><a href="#扩展：-二叉树有很多扩展的数据结构，包括平衡二叉树、红黑树、B-树等，这些数据结构二叉树的基础上衍生了很多的功能，在实际应用中广泛用到，例如mysql的数据库索引结构用的就是B-树，还有HashMap的底层源码中用到了红黑树。这些二叉树的功能强大，但算法上比较复杂，想学习的话还是需要花时间去深入的。" class="headerlink" title="扩展： 二叉树有很多扩展的数据结构，包括平衡二叉树、红黑树、B+树等，这些数据结构二叉树的基础上衍生了很多的功能，在实际应用中广泛用到，例如mysql的数据库索引结构用的就是B+树，还有HashMap的底层源码中用到了红黑树。这些二叉树的功能强大，但算法上比较复杂，想学习的话还是需要花时间去深入的。"></a>扩展： 二叉树有很多扩展的数据结构，包括平衡二叉树、红黑树、B+树等，这些数据结构二叉树的基础上衍生了很多的功能，在实际应用中广泛用到，例如mysql的数据库索引结构用的就是B+树，还有HashMap的底层源码中用到了红黑树。这些二叉树的功能强大，但算法上比较复杂，想学习的话还是需要花时间去深入的。</h3><h1 id="6、散列表"><a href="#6、散列表" class="headerlink" title="6、散列表"></a>6、散列表</h1><h2 id="-4"><a href="#-4" class="headerlink" title></a><a href="https://i.loli.net/2020/04/05/eKhcRydQr5u2wgk.jpg" data-fancybox="group" data-caption="1.jpeg" class="fancybox"><img alt="1.jpeg" title="1.jpeg" data-src="https://i.loli.net/2020/04/05/eKhcRydQr5u2wgk.jpg" class="lazyload"></a></h2><p>散列表，也叫哈希表，是根据关键码和值 (key和value) 直接进行访问的数据结构，通过key和value来映射到集合中的一个位置，这样就可以很快找到集合中的对应元素。</p><p>记录的存储位置=f(key)</p><p>这里的对应关系 f 成为散列函数，又称为哈希 (hash函数)，而散列表就是把Key通过一个固定的算法函数既所谓的哈希函数转换成一个整型数字，然后就将该数字对数组长度进行取余，取余结果就当作数组的下标，将value存储在以该数字为下标的数组空间里，这种存储空间可以充分利用数组的查找优势来查找元素，所以查找的速度很快。</p><p>哈希表在应用中也是比较常见的，就如Java中有些集合类就是借鉴了哈希原理构造的，例如HashMap，HashTable等，利用hash表的优势，对于集合的查找元素时非常方便的，然而，因为哈希表是基于数组衍生的数据结构，在添加删除元素方面是比较慢的，所以很多时候需要用到一种数组链表来做，也就是拉链法。拉链法是数组结合链表的一种结构，较早前的hashMap底层的存储就是采用这种结构，直到jdk1.8之后才换成了数组加红黑树的结构，其示例图如下：</p><p>从图中可以看出，左边很明显是个数组，数组的每个成员包括一个指针，指向一个链表的头，当然这个链表可能为空，也可能元素很多。我们根据元素的一些特征把元素分配到不同的链表中去，也是根据这些特征，找到正确的链表，再从链表中找出这个元素。</p><p>哈希表的应用场景很多，当然也有很多问题要考虑，比如哈希冲突的问题，如果处理的不好会浪费大量的时间，导致应用崩溃。</p><h1 id="7、堆"><a href="#7、堆" class="headerlink" title="7、堆"></a>7、堆</h1><h2 id="-5"><a href="#-5" class="headerlink" title></a><a href="https://i.loli.net/2020/04/05/uTBxQsWoh35iUgV.jpg" data-fancybox="group" data-caption="7.jpeg" class="fancybox"><img alt="7.jpeg" title="7.jpeg" data-src="https://i.loli.net/2020/04/05/uTBxQsWoh35iUgV.jpg" class="lazyload"></a></h2><p>堆是一种比较特殊的数据结构，可以被看做一棵树的数组对象，具有以下的性质：</p><p>堆中某个节点的值总是不大于或不小于其父节点的值；</p><p>堆总是一棵完全二叉树。</p><p>将根节点最大的堆叫做最大堆或大根堆，根节点最小的堆叫做最小堆或小根堆。常见的堆有二叉堆、斐波那契堆等。</p><p>堆的定义如下：n个元素的序列{k1,k2,ki,…,kn}当且仅当满足下关系时，称之为堆。</p><p>(ki &lt;= k2i,ki &lt;= k2i+1)或者(ki &gt;= k2i,ki &gt;= k2i+1), (i = 1,2,3,4…n/2)，满足前者的表达式的成为小顶堆，满足后者表达式的为大顶堆，这两者的结构图可以用完全二叉树排列出来，示例图如下：</p><p>因为堆有序的特点，一般用来做数组中的排序，称为堆排序。</p><h1 id="8、图"><a href="#8、图" class="headerlink" title="8、图"></a>8、图</h1><h2 id="-6"><a href="#-6" class="headerlink" title></a><a href="https://i.loli.net/2020/04/05/whcj1ieqQYVtPra.jpg" data-fancybox="group" data-caption="8.jpeg" class="fancybox"><img alt="8.jpeg" title="8.jpeg" data-src="https://i.loli.net/2020/04/05/whcj1ieqQYVtPra.jpg" class="lazyload"></a></h2><h2 id="图的定义："><a href="#图的定义：" class="headerlink" title="图的定义："></a>图的定义：</h2><p>　　一个图G = (V,E)由顶点(vertex)集 V 合边(edge)集 E 组成。每条边(v,w)就是一个点对,其中v,w ∈ V。有时也把边称作弧。如果点对是有序的，那么图就叫做有向图。顶点 v 和 w 领接边 (v,w) ∈ E。在一个具有边(v,w)从而具有边(w,v)的无向图，w和v邻接那v和w也邻接。</p><h2 id="图的基本术语："><a href="#图的基本术语：" class="headerlink" title="图的基本术语："></a>图的基本术语：</h2><p>1、阶（Order）：图G中顶集V的大小称作图G的阶。</p><p>2、子图（Sub-Graph）：G’称作图G=(V,E)的子图，当图G’=(V’,E’)，且V‘包含于V，E’包含于E。每个图都是本身的子图。</p><p>3、生成子图（Spanning Sub-Graph）：指满足条件V(G’) = V(G)的G的子图G。</p><p>4、度（Degree）：一个顶点的度是指与该边相关联的边的条数，顶点v的度记作d(v)。</p><p>5、入度（In-degree）和出度（Out-degree）：对于有向图来说，一个顶点的度可细分为入度和出度。一个顶点的入度是指与其关联的各边之中，以其为终点的边数；出度则是相对的概念，指以该顶点为起点的边数。</p><p>6、自环（Loop）：若一条边的两个顶点为同一顶点，则此边称作自环。</p><p>7、路径（Path）：从u到v的一条路径是指一个序列v0,e1,v1,e2,v2,…ek,vk，其中ei的顶点为vi及vi - 1，k称作路径的长度。如果它的起止顶点相同，该路径是“闭”的，反之，则称为“开”的。一条路径称为一简单路径(simple path)，如果路径中除起始与终止顶点可以重合外，所有顶点两两不等。<br>8、连通图：如果在一个无向图中从每一个顶点到每个其他顶点都存在一条路径，则称该无向图是联通的，具有这样的有向图成为强连通图。</p><h2 id="图的基本操作："><a href="#图的基本操作：" class="headerlink" title="图的基本操作："></a>图的基本操作：</h2><p>（1）创建一个图结构 CreateGraph(G)<br>（2）检索给定顶点 LocateVex(G,elem)<br>（3）获取图中某个顶点 GetVex(G,v)<br>（4）为图中顶点赋值 PutVex(G,v,value)<br>（5）返回第一个邻接点 FirstAdjVex(G,v)<br>（6）返回下一个邻接点 NextAdjVex(G,v,w)<br>（7）插入一个顶点 InsertVex(G,v)<br>（8）删除一个顶点 DeleteVex(G,v)<br>（9）插入一条边 InsertEdge(G,v,w)<br>（10）删除一条边 DeleteEdge(G,v,w)<br>（11）遍历图 Traverse(G,v)</p><h2 id="图的高级算法："><a href="#图的高级算法：" class="headerlink" title="图的高级算法："></a>图的高级算法：</h2><p>　　1.最小生成树（Prim和kruskal算法）</p><p>　　2.单元路径最短（Dijkstra算法）</p><p>　　3.所有点对的最短路径（Floyd-Warshall算法）</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data struct </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP与HTTPS简介</title>
      <link href="/2020/03/22/HTTP%E4%B8%8EHTTPS/"/>
      <url>/2020/03/22/HTTP%E4%B8%8EHTTPS/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="HTTP-简介"><a href="#HTTP-简介" class="headerlink" title="HTTP 简介"></a>HTTP 简介</h1><p>HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于从万维网（WWW:World Wide Web ）服务器传输超文本到本地浏览器的传送协议。。</p><p>HTTP是一个基于TCP/IP通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。</p><h2 id="HTTP-工作原理"><a href="#HTTP-工作原理" class="headerlink" title="HTTP 工作原理"></a>HTTP 工作原理</h2><p>HTTP协议工作于客户端-服务端架构上。浏览器作为HTTP客户端通过URL向HTTP服务端即WEB服务器发送所有请求。</p><p>Web服务器有：Apache服务器，IIS服务器（Internet Information Services）等。</p><p>Web服务器根据接收到的请求后，向客户端发送响应信息。</p><p>HTTP默认端口号为80，但是你也可以改为8080或者其他端口。</p><h2 id="HTTP三点注意事项："><a href="#HTTP三点注意事项：" class="headerlink" title="HTTP三点注意事项："></a>HTTP三点注意事项：</h2><ul><li>HTTP是无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</li><li>HTTP是媒体独立的：这意味着，只要客户端和服务器知道如何处理的数据内容，任何类型的数据都可以通过HTTP发送。客户端以及服务器指定使用适合的MIME-type内容类型。</li><li>HTTP是无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。<br>以下图表展示了HTTP协议通信流程：</li></ul><p><a href="https://www.runoob.com/wp-content/uploads/2013/11/cgiarch.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://www.runoob.com/wp-content/uploads/2013/11/cgiarch.gif" class="lazyload"></a></p><h1 id="HTTPS-简介"><a href="#HTTPS-简介" class="headerlink" title="HTTPS 简介"></a>HTTPS 简介</h1><p>HTTPS：是以安全为目标的HTTP通道，简单讲是HTTP的安全版，即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。</p><p>HTTPS协议的主要作用可以分为两种：一种是建立一个信息安全通道，来保证数据传输的安全；另一种就是确认网站的真实性。</p><h2 id="HTTPS的工作原理"><a href="#HTTPS的工作原理" class="headerlink" title="HTTPS的工作原理"></a>HTTPS的工作原理</h2><p>我们都知道HTTPS能够加密信息，以免敏感信息被第三方获取，所以很多银行网站或电子邮箱等等安全级别较高的服务都会采用HTTPS协议。</p><p>客户端在使用HTTPS方式与Web服务器通信时有以下几个步骤，如图所示。</p><p>（1）客户使用https的URL访问Web服务器，要求与Web服务器建立SSL连接。</p><p>（2）Web服务器收到客户端请求后，会将网站的证书信息（证书中包含公钥）传送一份给客户端。</p><p>（3）客户端的浏览器与Web服务器开始协商SSL连接的安全等级，也就是信息加密的等级。</p><p>（4）客户端的浏览器根据双方同意的安全等级，建立会话密钥，然后利用网站的公钥将会话密钥加密，并传送给网站。</p><p>（5）Web服务器利用自己的私钥解密出会话密钥。</p><p>（6）Web服务器利用会话密钥加密与客户端之间的通信。</p><p><a href="https://www.sslzhengshu.com/upload/7/7e327e701ba6.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://www.sslzhengshu.com/upload/7/7e327e701ba6.jpg" class="lazyload"></a></p><h2 id="HTTPS的优点"><a href="#HTTPS的优点" class="headerlink" title="HTTPS的优点"></a>HTTPS的优点</h2><p>尽管HTTPS并非绝对安全，掌握根证书的机构、掌握加密算法的组织同样可以进行中间人形式的攻击，但HTTPS仍是现行架构下最安全的解决方案，主要有以下几个好处：</p><p>（1）使用HTTPS协议可认证用户和服务器，确保数据发送到正确的客户机和服务器；</p><p>（2）HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，要比http协议安全，可防止数据在传输过程中不被窃取、改变，确保数据的完整性。</p><p>（3）HTTPS是现行架构下最安全的解决方案，虽然不是绝对安全，但它大幅增加了中间人攻击的成本。</p><p>（4）谷歌曾在2014年8月份调整搜索引擎算法，并称“比起同等HTTP网站，采用HTTPS加密的网站在搜索结果中的排名将会更高”。</p><h2 id="HTTP-与-HTTPS-的区别"><a href="#HTTP-与-HTTPS-的区别" class="headerlink" title="HTTP 与 HTTPS 的区别"></a>HTTP 与 HTTPS 的区别</h2><ul><li><p>HTTP 是明文传输，HTTPS 通过 SSL\TLS 进行了加密</p></li><li><p>HTTP 的端口号是 80，HTTPS 是 443</p></li><li><p>HTTPS 需要到 CA 申请证书，一般免费证书很少，需要交费</p></li><li><p>HTTPS 的连接很简单，是无状态的；HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，比 HTTP 协议安全</p></li></ul><h1 id="SSL介绍："><a href="#SSL介绍：" class="headerlink" title="SSL介绍："></a>SSL介绍：</h1><p>安全套接字（Secure Socket Layer，SSL）协议是Web浏览器与Web服务器之间安全交换信息的协议，提供两个基本的安全服务：鉴别与保密。</p><p>SSL是Netscape于1994年开发的，后来成为了世界上最著名的web安全机制，所有主要的浏览器都支持SSL协议。</p><p>目前有三个版本：2、3、3.1，最常用的是第3版，是1995年发布的。</p><p>在客户端与服务器间传输的数据是通过使用对称算法（如 DES 或 RC4）进行加密的。公用密钥算法（通常为 RSA）是用来获得加密密钥交换和数字签名的，此算法使用服务器的SSL数字证书中的公用密钥。有了服务器的SSL数字证书，客户端也可以验证服务器的身份。SSL 协议的版本 1 和 2 只提供服务器认证。版本 3 添加了客户端认证，此认证同时需要客户端和服务器的数字证书。</p><h2 id="SSL协议的三个特性"><a href="#SSL协议的三个特性" class="headerlink" title="SSL协议的三个特性"></a>SSL协议的三个特性</h2><p>① 保密：在握手协议中定义了会话密钥后，所有的消息都被加密。</p><p>② 鉴别：可选的客户端认证，和强制的服务器端认证。</p><p>③ 完整性：传送的消息包括消息完整性检查（使用MAC）。</p><p>SSL的位置</p><p>SSL介于应用层和TCP层之间。应用层数据不再直接传递给传输层，而是传递给SSL层，SSL层对从应用层收到的数据进行加密，并增加自己的SSL头。</p><h2 id="SSL的工作原理"><a href="#SSL的工作原理" class="headerlink" title="SSL的工作原理"></a>SSL的工作原理</h2><p>握手协议（Handshake protocol）</p><p>记录协议（Record protocol）</p><p>警报协议（Alert protocol）</p>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP与HTTPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python</title>
      <link href="/2020/03/22/python/"/>
      <url>/2020/03/22/python/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="python第三方包国内镜像网址"><a href="#python第三方包国内镜像网址" class="headerlink" title="python第三方包国内镜像网址"></a>python第三方包国内镜像网址</h2><p>清华：<a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>阿里云：<a href="http://mirrors.aliyun.com/pypi/simple/" target="_blank" rel="noopener">http://mirrors.aliyun.com/pypi/simple/</a></p><p>中国科技大学 <a href="https://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.mirrors.ustc.edu.cn/simple/</a> (比较好用)</p><p>华中理工大学：<a href="http://pypi.hustunique.com/" target="_blank" rel="noopener">http://pypi.hustunique.com/</a></p><p>山东理工大学：<a href="http://pypi.sdutlinux.org/" target="_blank" rel="noopener">http://pypi.sdutlinux.org/</a></p><p>豆瓣：<a href="http://pypi.douban.com/simple/" target="_blank" rel="noopener">http://pypi.douban.com/simple/</a></p><h3 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h3><p>可以在使用pip的时候加参数-i <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a><br>例如：pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a> pyspider，这样就会从清华这边的镜像去安装pyspider库。</p><h3 id="永久使用"><a href="#永久使用" class="headerlink" title="永久使用"></a>永久使用</h3><p>Linux下，修改 ~/.pip/pip.conf (没有就创建一个文件夹及文件。文件夹要加“.”，表示是隐藏文件夹)<br>windows下，直接在user目录中创建一个pip目录，再新建文件pip.ini。（例如：C:\Users\WQP\pip\pip.ini）内容同上</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/03/13/hello-world/"/>
      <url>/2020/03/13/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hello Word </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
